      program test
c     program to solve van der Pol (Hairer II, pp 403)
      parameter(is=9)
      parameter(isamp=51,jmax=9)

      dimension aE(is,is),aI(is,is),bE(is),bI(is),cE(is),cI(is)
      dimension bEH(is),bIH(is)
      dimension ruE(is),rvE(is),ruI(is),rvI(is)
      dimension cost(isamp),error1(isamp),error2(isamp),sig(isamp)
      dimension epsave(jmax),b1save(jmax),b2save(jmax)
      dimension yexact(81,2)

      open(unit=39,file='exact.vanderpol.data')

      do i=1,jmax
        read(39,*)yexact(i,1),yexact(i,2)
        if(i.ne.jmax)then
        do k = 1,9
          read(39,*)tmp1,tmp2
        enddo
        endif
      enddo

      do i=1,isamp
        sig(i) = 0.0
      enddo
      do ii = 1,1
      
      write(*,*)'what is icase'
      read(*,*)icase

      call rungeadd(aE,aI,bE,bI,cE,cI,nrk,bEH,bIH,icase)

c     .     
c     y(t)  = 
c
      do iimex = 2,2

      imex = iimex - 1

      !do jjj = 1,jmax,1
      do jjj = 20,20,1
      ep = 1./10**((jjj-1)/1.)
c     ep = 1./10**((jjj-1)/10.)
      write(50,*)'zone T = "ep = ',ep,'",'
      write(51,*)'zone T = "ep = ',ep,'",'


   
      jjm = 1
      do iii = jjm,isamp
c     do iii = 61,61
      dt = 0.5/10**((iii-1.)/20.)

      dto = dt

      tfinal = 0.5

      t = 0.
      u = 2.
      v = -0.6666654321121172    

      do kkk = 1,100000000
      
        if(t+dt.gt.tfinal)dt = tfinal-t + 1.0e-11

        uo = u
        vo = v

        do L = 1,nrk

          if(imex.eq.1)then
            ttE = t + cE(L)*dt
            ttI = t + cI(L)*dt
            ruE(L) = dt*v
            rvE(L) = 0.
            ruI(L) = 0.
            rvI(L) = dt*((1-u*u)*v - u)/ep
          else
            ttI = t + cI(L)*dt
            ruE(L) = 0.
            rvE(L) = 0.
            ruI(L) = dt*v
            rvI(L) = dt*((1-u*u)*v - u)/ep
          endif


          if(L.ne.nrk)then
            uL = uo
            vL = vo
            do LL = 1,L 
              uL = uL + aE(L+1,LL)*ruE(LL) + aI(L+1,LL)*ruI(LL)
              vL = vL + aE(L+1,LL)*rvE(LL) + aI(L+1,LL)*rvI(LL)
            enddo


            ttE = t + cE(L+1)*dt
            ttI = t + cI(L+1)*dt

          if(imex.eq.1)then
            do k = 1,20
              uold = u
              vold = v
              e11 = 1.-aI(L+1,L+1)*dt*(0.)
              e12 = 0.-aI(L+1,L+1)*dt*(0.)
              e21 = 0.-aI(L+1,L+1)*dt*(-1.)/ep
              e22 = 1.-aI(L+1,L+1)*dt*(1.-u*u)/ep
              r1 = e11*u + e12*v - uL
              r2 = e21*u + e22*v - vL
              d11 = 1.-aI(L+1,L+1)*dt*(0.)
              d12 = 0.-aI(L+1,L+1)*dt*(0.)
              d21 = 0.-aI(L+1,L+1)*dt*(-2*u*v-1)/ep
              d22 = 1.-aI(L+1,L+1)*dt*(1-u*u)/ep
              det = (d11*d22-d12*d21)
              di11 =  d22/det
              di12 = -d12/det
              di21 = -d21/det
              di22 =  d11/det
              u = u - di11*r1 - di12*r2
              v = v - di21*r1 - di22*r2
              tmp = abs(u-uold) + abs(v-vold)
              write(*,*) tmp
              if(tmp.lt.1.e-12) go to 150
            enddo
  150       continue
          else
            do k = 1,20
              uold = u
              vold = v
              e11 = 1.-aI(L+1,L+1)*dt*(0.)
              e12 = 0.-aI(L+1,L+1)*dt*(1.)
              e21 = 0.-aI(L+1,L+1)*dt*(-1.)/ep
              e22 = 1.-aI(L+1,L+1)*dt*(1.-u*u)/ep
              r1 = e11*u + e12*v - uL
              r2 = e21*u + e22*v - vL
              d11 = 1.-aI(L+1,L+1)*dt*(0.)
              d12 = 0.-aI(L+1,L+1)*dt*(1.)
              d21 = 0.-aI(L+1,L+1)*dt*(-2*u*v-1)/ep
              d22 = 1.-aI(L+1,L+1)*dt*(1-u*u)/ep
              det = (d11*d22-d12*d21)
              di11 =  d22/det
              di12 = -d12/det
              di21 = -d21/det
              di22 =  d11/det
              u = u - di11*r1 - di12*r2
              v = v - di21*r1 - di22*r2
              tmp = abs(u-uold) + abs(v-vold)
              if(tmp.lt.1.e-12) go to 160
            enddo
  160       continue
          endif

          elseif(L.eq.nrk) then
        
            u = uo
            v = vo
            do LL = 1,nrk 
              u = u + bE(LL)*ruE(LL) + bI(LL)*ruI(LL)
              v = v + bE(LL)*rvE(LL) + bI(LL)*rvI(LL)
            enddo
            if(time.lt.tfinal-1.0e-11)then
              err = 0.0
              do LL = 1,nrk 
              err = err + bE(LL)*(ruE(LL)+rvE(LL))
     &                  + bI(LL)*(ruI(LL)+rvI(LL))
     &                  - bEH(LL)*(ruE(LL)+rvE(LL))
     &                  - bIH(LL)*(ruI(LL)+rvI(LL))
              enddo
              err = abs(err)
            endif

          endif

        enddo
          t = t + dt
          if(t.ge.tfinal) go to 100

        enddo
  100  continue
       
       if(nrk.gt.1)then
         nrkm1 = nrk-1
       else
         nrkm1 = nrk
       endif

       tmp1 = abs(u-yexact(jjj,1))
       tmp2 = abs(v-yexact(jjj,2))
c      write(*,*)u,v
c      write(*,*)u,v,tmp1,tmp2
       if(tmp1.eq.0.0)tmp1=1.0e-15
       if(tmp2.eq.0.0)tmp2=1.0e-15
       error1(iii) = alog10(tmp1)
       error2(iii) = alog10(tmp2)
c      errorT(iii) = alog10(sqrt((u-uex)**2 + (v-vex)**2))
c      cost = alog10(nrk/dto)
       cost(iii) = alog10(nrkm1/dto)
       dtL = alog10(dto)
       if(err.le.1.0e-15)err=1.0e-15
       err = alog10(err)
c      write(*,50)dtL,error1(iii),error2(iii)
       write(50,50)cost(iii),error1(iii)
       write(51,50)cost(iii),error2(iii)
       enddo
       call fit(cost,error1,isamp,sig,0,a1,b1,siga1,sigb1,chi2,q)
       call fit(cost,error2,isamp,sig,0,a2,b2,siga2,sigb2,chi2,q)
c      write(*,60)ep,a1,b1,siga1,sigb1,a2,b2,siga2,sigb2

       epsave(jjj) = log10(ep)
       b1save(jjj) = -b1
       b2save(jjj) = -b2

       enddo

c      if(imex.eq.0)then
c        write(35,*)'zone T = "Diff Var: Implicit",'
c      else
c        write(35,*)'zone T = "Diff Var: IMEX    ",'
c      endif
c      do j=1,jmax
c        write(35,50)epsave(j),b1save(j)
c      enddo
c      if(imex.eq.0)then
c        write(35,*)'zone T = "Alge Var: Implicit",'
c      else
c        write(35,*)'zone T = "Alge Var: IMEX    ",'
c      endif
c      do j=1,jmax
c        write(35,50)epsave(j),b2save(j)
c      enddo

       enddo

       enddo

   60  format( e12.5,1x,8(f8.3,1x))

   50  format( 10(e12.5,1x))
       stop
       end

c------------------------------------------------------------------c

      subroutine rungeadd(aE,aI,bE,bI,cE,cI,ns,bEH,bIH,icase)
      parameter(is=9)

      dimension aE(is,is),bE(is),cE(is)
      dimension aI(is,is),bI(is),cI(is)
      dimension bEh(is),bIh(is)
      dimension bD(is,3),bdsum(is)
      dimension p(0:is,0:is),q(0:is)
      integer pstar
      pstar = 2
      do i=1,is
       do j=1,is
        aE(i,j) = 0.0
        aI(i,j) = 0.0
       enddo
       be(i)  = 0.
       bi(i)  = 0.
       beh(i) = 0.
       bih(i) = 0.
       ce(i)  = 0.
       ci(i)  = 0.
      enddo

      if(icase.eq.1) then
       print*, 'Griepentrog3, Seminarberichte Nr. 11, 19-29, (1978)'
c
       ns = 3
c
       beta    = dsqrt(3.d0)/3.d0
c
       be(1) = 1.d0/6.d0
       be(2) = 2.d0/3.d0
       be(3) = 1.d0/6.d0
c
       ae(2,1) = 1.d0/2.d0
       ae(3,1) =-1.d0
       ae(3,2) = 2.d0
c
       ai(2,1) =-           beta /2.d0 
       ai(2,2) = (1.d0+1.d0*beta)/2.d0
       ai(3,1) = (3.d0+5.d0*beta)/2.d0
       ai(3,2) =-(1.d0+3.d0*beta)
       ai(3,3) = (1.d0+1.d0*beta)/2.d0
c 
       do i=1,ns
         bi(i) = be(i)
       enddo
c
      elseif(icase.eq.2) then
       print*, 'Griepentrog4, Seminarberichte Nr. 11, 19-29, (1978)'
c
       ns = 4
c
       gamma = 0.43586652150845899941601945119355684252929409293843
       a32   = 0.910333295458459163365673542112
       a42   =-2.14073155355996715635790695644
c
       be(1) = 1.d0/8.d0
       be(2) = 3.d0/8.d0
       be(3) = 3.d0/8.d0
       be(4) = 1.d0/8.d0
c
       ae(2,1) = 1.d0/3.d0
       ae(3,1) =-1.d0/3.d0
       ae(3,2) = 1.d0
       ae(4,1) = 1.d0
       ae(4,2) =-1.d0
       ae(4,3) = 1.d0
c
       ai(2,1) = 1.d0/3.d0 - gamma
       ai(2,2) = gamma
       ai(3,1) = 2.d0/3.d0 - gamma - a32
       ai(3,2) = a32
       ai(3,3) = gamma
       ai(4,1) = 1.d0 - gamma - a42 + a32
       ai(4,2) = a42
       ai(4,3) = -a32
       ai(4,4) = gamma
c 
       do i=1,ns
         bi(i) = be(i)
       enddo
c
      elseif(icase.eq.3) then
       print*,
     & 'X. Zhong, ASIRK-3A, J. Comp. Physics, v128, 19-31 (1996)'
c
       ns = 3
c
       be(1) = 1.d0/8.d0
       be(2) = 1.d0/8.d0
       be(3) = 3.d0/4.d0
c
       ae(2,1) = 8.d0/7.d0
       ae(3,1) = 71.d0/252.d0
       ae(3,2) = 7.d0/36.d0
c
       ai(1,1) = 0.485561 
       ai(2,1) = 0.306727
       ai(2,2) = 0.951130
       ai(3,1) = 0.450000
       ai(3,2) =-0.263111
       ai(3,3) = 0.189208
c
       do i=1,ns
         bi(i) = be(i)
       enddo
c
      elseif(icase.eq.4) then
       print*,
     & 'X. Zhong, ASIRK-2A, J. Comp. Physics, v128, 19-31 (1996)'
c
       ns = 2
c
       be(1) = 1.d0/2.d0
       be(2) = 1.d0/2.d0
c
       ae(2,1) = 1.d0
c
       ai(1,1) = 1.d0/4.d0
       ai(2,1) = 5.d0/12.d0
       ai(2,2) = 1.d0/3.d0
c
       do i=1,ns
         bi(i) = be(i)
       enddo
c
      elseif(icase.eq.5) then
       print*,
     & 'Yoh, J.J. & X. Zhong, SIRK-3A, AIAA98-0130 (1998)'
c
       ns = 3
c
       be(1) = 1.d0/8.d0
       be(2) = 1.d0/8.d0
       be(3) = 3.d0/4.d0
c
       ae(2,1) = 8.d0/7.d0
       ae(3,1) = 71.d0/252.d0
       ae(3,2) = 7.d0/36.d0
c
       ai(1,1) = 3.d0/4.d0
       ai(2,1) = 5589.d0/6524.d0
       ai(2,2) = 75.d0/233.d0
       ai(3,1) = 7691.d0/26096.d0
       ai(3,2) =-26335.d0/78288.d0
       ai(3,3) = 65.d0/168.d0
c
       do i=1,ns
         bi(i) = be(i)
       enddo
c
      elseif(icase.eq.6) then
       print*,
     & ' Yoh, J.J. & X. Zhong,  SIRK-4A, AIAA98-0130 (1998)'
       print*,
     & 'Shen, J.W. & X. Zhong, ASIRK-3A, AIAA96-1969 (1996)'
c
       ns = 4
c
       be(1) = 13.d0/100.d0
       be(2) = 1.d0/4.d0
       be(3) = 13.d0/25.d0
       be(4) = 1.d0/10.d0
c
       ae(2,1) = 0.3381696751494996
       ae(3,1) =-0.0190883406358404
       ae(3,2) = 0.7795836891216580
       ae(4,1) = -3.d0/10.d0
       ae(4,2) = 1.d0/5.d0
       ae(4,3) = 3.d0/10.d0
c
       ai(1,1) = 117481.d0/100000.d0
       ai(2,1) =-147.d0/500.d0
       ai(2,2) = 0.5267669485925013
       ai(3,1) = 0.1491346769056579
       ai(3,2) = 1.d0/5.d0
       ai(3,3) = 0.158717133268042
       ai(4,1) =-1.130814171669509
       ai(4,2) = 1.780814387285019
       ai(4,3) =-1.d0/2.d0
       ai(4,4) = 1.d0/10.d0
c
       do i=1,ns
         bi(i) = be(i)
       enddo
c
      elseif(icase.eq.7) then
       print*,
     & 'Yoh, J.J. & X. Zhong, LSSIRK-3A, AIAA98-0130 (1998)'
       print*,
     & 'Yoh, J.J. & X. Zhong, LSSIRK-3A, AIAA97-0803 (1997)'
c
       ns = 3
c
       be(1) = 1.d0/6.d0
       be(2) = 3.d0/10.d0
       be(3) = 8.d0/15.d0
c
       ae(2,1) = 1.d0/3.d0
       ae(3,1) =-3.d0/16.d0
       ae(3,2) = 15.d0/16.d0
c
       ai(1,1) = 1.d0/5.d0
       ai(2,1) = -7.d0/15.d0
       ai(2,2) = 49.d0/75.d0
       ai(3,1) = 41.d0/480.d0
       ai(3,2) = 357.d0/800.d0
       ai(3,3) = 143.d0/600.d0
c
       do i=1,ns
         bi(i) = be(i)
       enddo
c
      elseif(icase.eq.8) then
       print*,
     & 'Yoh, J.J. & X. Zhong, LSSIRK-4A, AIAA98-0130 (1998)'
c
       ns = 4
c
       be(1) = 1.d0/9.d0
       be(2) =-1.d0/9.d0
       be(3) = 1.d0/3.d0
       be(4) = 2.d0/3.d0
c
       ae(2,1) = 3.d0/4.d0
       ae(3,1) = 35.d0/108.d0
       ae(3,2) =-2.d0/27.d0
       ae(4,1) =-103.d0/108.d0
       ae(4,2) =-8.d0/27.d0
       ae(4,3) = 2.d0
c
       ai(1,1) = 2.d0
       ai(2,1) = 23227.d0/12096.d0
       ai(2,2) = 10901.d0/12096.d0
       ai(3,1) =-124055.d0/36288.d0
       ai(3,2) =-6577.d0/9072.d0
       ai(3,3) = 7601.d0/1344.d0
       ai(4,1) = 481.d0/189.d0
       ai(4,2) = 59.d0/189.d0
       ai(4,3) =-73.d0/21.d0
       ai(4,4) = 3.d0/4.d0
c
       do i=1,ns
         bi(i) = be(i)
       enddo
c
      elseif(icase.eq.9) then
       print*,
     & 'U. Ascher et al., (1,1,1) Appl. Num. Math., 25, 2-3, 151 (1997)'
c
       ns = 2
c
       be(1) = 1.d0
       be(2) = 0.d0
c
       bi(1) = 0.d0
       bi(2) = 1.d0
c
       ae(2,1) = 1.d0
c
       ai(2,1) = 0.d0
       ai(2,2) = 1.d0
c
      elseif(icase.eq.10) then
       print*,
     & 'U. Ascher et al., (1,2,1) Appl. Num. Math., 25, 2-3, 151 (1997)'
c
       ns = 2
c
       be(1) = 0.d0
       be(2) = 1.d0
c
       ae(2,1) = 1.d0
c
       ai(2,1) = 0.d0
       ai(2,2) = 1.d0
c
       do i=1,ns
         bi(i) = be(i)
       enddo
c
      elseif(icase.eq.11) then
       print*,
     & 'U. Ascher et al., (1,2,2) Appl. Num. Math., 25, 2-3, 151 (1997)'
c
       ns = 2
c
       be(1) = 0.d0
       be(2) = 1.d0
c
       ae(2,1) = 1.d0/2.d0
c
       ai(2,1) = 0.d0
       ai(2,2) = 1.d0/2.d0
c
       do i=1,ns
         bi(i) = be(i)
       enddo
c
      elseif(icase.eq.12) then
       print*,
     & 'U. Ascher et al., (2,3,3) Appl. Num. Math., 25, 2-3, 151 (1997)'
c
       ns = 3
c
       gamma = (3.d0 + dsqrt(3.d0))/6.d0
c
       be(1) = 0.d0
       be(2) = 1.d0/2.d0
       be(3) = 1.d0/2.d0
c
       ae(2,1) = gamma
       ae(3,1) = gamma - 1.d0
       ae(3,2) = 2.d0*(1.d0 - gamma)
c
       ai(2,1) = 0.d0
       ai(2,2) = gamma
       ai(3,1) = 0.d0
       ai(3,2) = 1.d0 - 2.d0*gamma
       ai(3,3) = gamma
c
       do i=1,ns
         bi(i) = be(i)
       enddo
c
      elseif(icase.eq.13) then
       print*,
     & 'U. Ascher et al., (2,3,2) Appl. Num. Math., 25, 2-3, 151 (1997)'
c
       ns = 3
c
       gamma = (2.d0 - dsqrt(2.d0))/2.d0
       delta = -2.d0*dsqrt(2.d0)/3.d0
c
       be(1) = 0.d0
       be(2) = 1.d0 - gamma
       be(3) = gamma
c
       ae(2,1) = gamma
       ae(3,1) = delta
       ae(3,2) = 1.d0 - delta
c
       ai(2,1) = 0.d0
       ai(2,2) = gamma
       ai(3,1) = 0.d0
       ai(3,2) = 1.d0 - gamma
       ai(3,3) = gamma
c
       do i=1,ns
         bi(i) = be(i)
       enddo
c
      elseif(icase.eq.14) then
       print*,
     & 'U. Ascher et al., (2,2,2) Appl. Num. Math., 25, 2-3, 151 (1997)'
c
       ns = 3
       gamma = (2.d0 - dsqrt(2.d0))/2.d0
       delta = 1.d0 - 1.d0/(2.d0*gamma)
c
       be(1) = delta
       be(2) = 1.d0 - delta
       be(3) = 0.d0
c
       bi(1) = 0.d0
       bi(2) = 1.d0 - gamma
       bi(3) = gamma
c
       ae(2,1) = gamma
       ae(3,1) = delta
       ae(3,2) = 1.d0 - delta
c
       ai(2,1) = 0.d0
       ai(2,2) = gamma
       ai(3,1) = 0.d0
       ai(3,2) = 1.d0 - gamma
       ai(3,3) = gamma
c
      elseif(icase.eq.15) then
       print*,
     & 'U. Ascher et al., (3,4,3) Appl. Num. Math., 25, 2-3, 151 (1997)'
c
       ns = 4
       gamma = 0.43586652150845899941601945119355684252929409293843
c
       be(1) = 0.d0 
       be(2) = -(3.d0/2.d0)*gamma**2 + 4.d0*gamma - 1.d0/4.d0
       be(3) =  (3.d0/2.d0)*gamma**2 - 5.d0*gamma + 5.d0/4.d0
       be(4) = gamma
c
       ae(2,1) = gamma
       ae(3,1) = 0.3212788860
       ae(3,2) = 0.3966543747
       ae(4,1) =-0.105858296 
       ae(4,2) = 0.5529291479
       ae(4,3) = 0.5529291479
c
       ai(2,1) = 0.d0
       ai(2,2) = gamma
       ai(3,1) = 0.d0
       ai(3,2) = (1.d0 - gamma)/2.d0
       ai(3,3) = gamma
       ai(4,1) = be(1)
       ai(4,2) = be(2)
       ai(4,3) = be(3)
       ai(4,4) = be(4)
c
       do i=1,ns
         bi(i) = be(i)
       enddo
c
      elseif(icase.eq.16) then
       print*,
     & 'U. Ascher et al., (4,4,3) Appl. Num. Math., 25, 2-3, 151 (1997)'
c
       ns = 5
c
       be(1) = 1.d0/4.d0
       be(2) = 7.d0/4.d0
       be(3) = 3.d0/4.d0
       be(4) =-7.d0/4.d0
       be(5) = 0.d0
c
       bi(1) = 0.d0
       bi(2) = 3.d0/2.d0
       bi(3) =-3.d0/2.d0
       bi(4) = 1.d0/2.d0
       bi(5) = 1.d0/2.d0
c
       ae(2,1) = 1.d0/2.d0
       ae(3,1) = 11.d0/18.d0
       ae(3,2) = 1.d0/18.d0
       ae(4,1) = 5.d0/6.d0
       ae(4,2) =-5.d0/6.d0
       ae(4,3) = 1.d0/2.d0
       ae(5,1) = 1.d0/4.d0
       ae(5,2) = 7.d0/4.d0
       ae(5,3) = 3.d0/4.d0
       ae(5,4) =-7.d0/4.d0
c
       ai(2,1) = 0.d0
       ai(2,2) = 1.d0/2.d0
       ai(3,1) = 0.d0
       ai(3,2) = 1.d0/6.d0
       ai(3,3) = 1.d0/2.d0
       ai(4,1) = 0.d0
       ai(4,2) =-1.d0/2.d0
       ai(4,3) = 1.d0/2.d0
       ai(4,4) = 1.d0/2.d0
       ai(5,1) = 0.d0
       ai(5,2) = 3.d0/2.d0
       ai(5,3) =-3.d0/2.d0
       ai(5,4) = 1.d0/2.d0
       ai(5,5) = 1.d0/2.d0
c
      elseif(icase.eq.17) then
       print*,
     & 'M.P. Calvo et al., LIRK3, Rep. 1999/3, Valladolid, Spain (1999)'
c
       ns = 4
c
       gamma = 0.43586652150845899941601945119355684252929409293843
       b2    = -(3.d0/2.d0)*gamma**2 + 4.d0*gamma - 1.d0/4.d0
       b3    =  (3.d0/2.d0)*gamma**2 - 5.d0*gamma + 5.d0/4.d0
       a32   = -7.d0/20.d0
       a43   =  (1.d0/3.d0 - 2.d0*gamma**2 - 2.d0*b3*a32*gamma)/
     &          (gamma*(1.d0 - gamma))
c
       be(1) = 0.d0
       be(2) = b2
       be(3) = b3
       be(4) = gamma
c
       ae(2,1) = gamma
       ae(3,1) = (1.d0 + gamma)/2.d0 - a32
       ae(3,2) = a32
       ae(4,1) = 0.d0
       ae(4,2) = 1.d0 - a43
       ae(4,3) = a43
c
       ai(2,1) = 0.d0
       ai(2,2) = gamma
       ai(3,1) = 0.d0
       ai(3,2) = (1.d0 - gamma)/2.d0
       ai(3,3) = gamma
       ai(4,1) = be(1)
       ai(4,2) = be(2)
       ai(4,3) = be(3)
       ai(4,4) = be(4)
c
       do i=1,ns
         bi(i) = be(i)
       enddo
!
      p(0,0) = 1.0d0
      p(0,1) = 1.0d0
      p(0,2) = 0.4999999999999999999999999
      p(0,3) = 0.1666666666666666666666666
      p(0,4) = 0.0333333333333333333333333
!
      p(1,0) =-0.3075995645253769982480583
      p(1,1) =-0.3075995645253769982480583
      p(1,2) =-0.1537997822626884991240291
      p(1,3) = 0.0161390914529633555311710
!
      p(2,0) =-0.2376606908097251435928581
      p(2,1) =-0.2376606908097251435928581
      p(2,2) =-0.0494724247862966888645043
!
      p(3,0) = 0.0d0
      p(3,1) = 0.0d0
!
      p(4,0) = 0.0d0
!
      q(0) = 1.0d0
      q(1) =-1.307599564525377
      q(2) = 0.5699388737156519
      q(3) =-0.0828057581196300221978377312
      q(4) = 0.0d0
c
      elseif(icase.eq.18) then
       print*,
     & 'M.P. Calvo et al., LIRK4, Rep. 1999/3, Valladolid, Spain (1999)'
c
       ns = 6
c
       be(1) = 0.d0
       be(2) = 25.d0/24.d0
       be(3) = -49.d0/48.d0
       be(4) = 125.d0/16.d0
       be(5) =-85.d0/12.d0
       be(6) = 1.d0/4.d0
c
       bih(1) = 0.d0
       bih(2) = 59.d0/48.d0
       bih(3) = -17.d0/96.d0
       bih(4) = 225.d0/32.d0
       bih(5) =-85.d0/12.d0
       bih(6) = 0.d0
c
       ae(2,1) = 1.d0/4.d0
       ae(3,1) = -1.d0/4.d0
       ae(3,2) = 1.d0
       ae(4,1) = -13.d0/100.d0
       ae(4,2) = 43.d0/75.d0
       ae(4,3) = 8.d0/75.d0
       ae(5,1) = -6.d0/85.d0
       ae(5,2) = 42.d0/85.d0
       ae(5,3) = 179.d0/1360.d0
       ae(5,4) =-15.d0/272.d0
       ae(6,1) = 0.d0
       ae(6,2) = 79.d0/24.d0
       ae(6,3) =-5.d0/8.d0
       ae(6,4) = 25.d0/2.d0
       ae(6,5) =-85.d0/6.d0
c
       ai(1,1) = 0.d0
       ai(2,1) = 0.d0
       ai(2,2) = 1.d0/4.d0
       ai(3,1) = 0.d0
       ai(3,2) = 1.d0/2.d0
       ai(3,3) = 1.d0/4.d0
       ai(4,1) = 0.d0
       ai(4,2) = 17.d0/50.d0
       ai(4,3) =-1.d0/25.d0
       ai(4,4) = 1.d0/4.d0
       ai(5,1) = 0.d0
       ai(5,2) = 371.d0/1360.d0
       ai(5,3) =-137.d0/2720.d0
       ai(5,4) = 15.d0/544.d0
       ai(5,5) = 1.d0/4.d0
       ai(6,1) = 0.d0
       ai(6,2) = 25.d0/24.d0
       ai(6,3) = -49.d0/48.d0
       ai(6,4) = 125.d0/16.d0
       ai(6,5) =-85.d0/12.d0
       ai(6,6) = 1.d0/4.d0
c
       do i=1,ns
         bi(i) = be(i)
       enddo
c
      elseif(icase.eq.19) then
       print*,
     & 'ARK3(2)4LSA (1999)'
c
       ns = 4
c
       be(1) =-410825137756.d0/25892389494833.d0
       be(2) = 7828350581659.d0/9403596119500.d0
       be(3) =-4163166517007.d0/16488790059870.d0
       be(4) = 1767732205903.d0/4055673282236.d0
c
       beh(1) = -152324812431.d0/4089794538998.d0
       beh(2) =  8509077669231.d0/9879857849579.d0
       beh(3) = -2097195437007.d0/9291674405048.d0
       beh(4) =  2193209047091.d0/5459859503100.d0
c
       ae(2,1) = 7.d0/20.d0
       ae(3,1) =-962213224085.d0/7852959655514.d0
       ae(3,2) = 14565912817511.d0/14244991165623.d0
       ae(4,1) =-15001051126688.d0/42978192381233.d0
       ae(4,2) = 12324179397355.d0/10854961291757.d0
       ae(4,3) = 1958405236713.d0/9164755756057.d0
c
       ai(2,1) =-870616392801.d0/10139183205590.d0
       ai(2,2) = 1767732205903.d0/4055673282236.d0
       ai(3,1) =-1693746053275.d0/3917707129207.d0
       ai(3,2) = 43527937832279.d0/48555119808672.d0
       ai(3,3) = 1767732205903.d0/4055673282236.d0
       ai(4,1) =-410825137756.d0/25892389494833.d0
       ai(4,2) = 7828350581659.d0/9403596119500.d0
       ai(4,3) =-4163166517007.d0/16488790059870.d0
       ai(4,4) = 1767732205903.d0/4055673282236.d0
c
       do i=1,ns
         bi(i)  = be(i)
         bih(i) = beh(i)
       enddo
c
      elseif(icase.eq.20) then
       print*,
     & 'ARK3(2)4L[2]SAa (1999)'
c
       ns = 4
c
       be(1) = 1471266399579.d0/7840856788654.d0
       be(2) =-4482444167858.d0/7529755066697.d0
       be(3) = 11266239266428.d0/11593286722821.d0
       be(4) = 1767732205903.d0/4055673282236.d0
c
       beh(1) = +2756255671327.d0/12835298489170.d0
       beh(2) = -10771552573575.d0/22201958757719.d0
       beh(3) = +9247589265047.d0/10645013368117.d0
       beh(4) = +2193209047091.d0/5459859503100.d0
c
       ae(2,1) = 1767732205903.d0/2027836641118.d0
       ae(3,1) = 5535828885825.d0/10492691773637.d0
       ae(3,2) = 788022342437.d0/10882634858940.d0
       ae(4,1) = 6485989280629.d0/16251701735622.d0
       ae(4,2) =-4246266847089.d0/9704473918619.d0
       ae(4,3) = 10755448449292.d0/10357097424841.d0
c
       ai(2,1) = 1767732205903.d0/4055673282236.d0
       ai(2,2) = 1767732205903.d0/4055673282236.d0
       ai(3,1) = 2746238789719.d0/10658868560708.d0
       ai(3,2) =-640167445237.d0/6845629431997.d0
       ai(3,3) = 1767732205903.d0/4055673282236.d0
       ai(4,1) = 1471266399579.d0/7840856788654.d0
       ai(4,2) =-4482444167858.d0/7529755066697.d0
       ai(4,3) = 11266239266428.d0/11593286722821.d0
       ai(4,4) = 1767732205903.d0/4055673282236.d0
c
c Second-order dense output -> b_{i}^{*} = sum_{j=1}^{p*} b_{ij}^{*}\theta^{j}
c
       if( pstar .eq. 2) then
        bd(1,1) = 4655552711362.d0/22874653954995.d0
        bd(2,1) =-18682724506714.d0/9892148508045.d0
        bd(3,1) = 34259539580243.d0/13192909600954.d0
        bd(4,1) = 584795268549.d0/6622622206610.d0
        bd(1,2) =-215264564351.d0/13552729205753.d0
        bd(2,2) = 17870216137069.d0/13817060693119.d0
        bd(3,2) =-28141676662227.d0/17317692491321.d0
        bd(4,2) = 2508943948391.d0/7218656332882.d0
c
        zero = 0.d0
        do i = 1, ns
         bdsum(i) = 0.d0
         do j = 1, pstar
          bdsum(i) = bdsum(i) + bd(i,j)
         enddo
         bdsum(i) = abs( bdsum(i) - be(i))
         zero = zero + bdsum(i)**2
        enddo
        if( sqrt(zero) .gt. 1.0d-10 ) then
         print*,' Case 20, p*=2 is inconsistent '
        endif
       endif
c
       do i=1,ns
         bi(i)  = be(i)
         bih(i) = beh(i)
       enddo
c
      elseif(icase.eq.21) then
       print*,'ARK5(3)8L[2]'
c
       ns = 8
c
       be(1) = 318331.d0/3283686.d0
       be(2) = 0.d0
       be(3) = 0.d0
       be(4) = 4824125.d0/6069924.d0
       be(5) =-3875.d0/5796.d0
       be(6) = 173680.d0/170163.d0
       be(7) = 248270.d0/1362543.d0
       be(8) = -13840.d0/32487.d0
c
c 1/phi44h = 24.250, p7h/q7 = -0.1 - 0.0392299*z_ns
c
c      beh(1) = 1069213491938.d0/10945102940235.d0
c      beh(2) = 0.d0
c      beh(3) = 0.d0
c      beh(4) = 12803426189011.d0/16276030569945.d0
c      beh(5) =-3602377857537.d0/5508295079011.d0
c      beh(6) = 11223639750859.d0/11130019649476.d0
c      beh(7) = 2190873275149.d0/12026208936803.d0
c      beh(8) = -4336781823697.d0/10302937428173.d0
c
c 1/phi44h = 24.333, p7h/q7 = -0.15 - 0.0593328*z_ns
c
c      beh(1) = 608994605623.d0/6226591968532.d0
c      beh(2) = 0.d0
c      beh(3) = 0.d0
c      beh(4) = 4514225697299.d0/5747834289311.d0
c      beh(5) =-5396190249557.d0/8282674038496.d0
c      beh(6) = 8253834564201.d0/8209608927358.d0
c      beh(7) = 1716063480086.d0/9444711874271.d0
c      beh(8) = -13842494764249.d0/33055650642063.d0
c
c 1/phi44h = 24.500, p7h/q7 = -0.20 - 0.0785179*z_ns
c
       beh(1) = 1224629318985.d0/12444939444146.d0
       beh(2) = 0.d0
       beh(3) = 0.d0
       beh(4) = 4056634308772.d0/5208423608897.d0
       beh(5) =-3598439744464.d0/5622647633245.d0
       beh(6) = 9473544170499.d0/9506584108301.d0
       beh(7) = 575586820365.d0/3161105282392.d0
       beh(8) = -4739623023559.d0/11396546770581.d0
c
c 1/phi44h = 24.625, p7h/q7 = -0.25 - 0.0981832*z_ns
c
c      beh(1) = 920458060105.d0/9321078695849.d0
c      beh(2) = 0.d0
c      beh(3) = 0.d0
c      beh(4) = 8831140662681.d0/11393688446879.d0
c      beh(5) =-7832139800122.d0/12369166071387.d0
c      beh(6) = 21885790188347.d0/22090876512011.d0
c      beh(7) = 1375717122595.d0/7558116050192.d0
c      beh(8) = -5277264120290.d0/12766231213401.d0
c
       ae(2,1) = 3.d0/10.d0
       ae(3,1) =-1045525952015.d0/8048462531208.d0
       ae(3,2) = 3462047609202.d0/4122901604639.d0
       ae(4,1) = 96742460051.d0/769375549969.d0
       ae(4,2) = 2362638175637.d0/9541209655347.d0
       ae(4,3) =-181143527584.d0/13552432514207.d0
       ae(5,1) = 238698258965.d0/9640249555037.d0
       ae(5,2) = 11198832401005.d0/9567746217138.d0
       ae(5,3) = 1004369315252.d0/12944145611405.d0
       ae(5,4) =-9936389407839.d0/13198703447218.d0
       ae(6,1) =-146614369318.d0/11243712265241.d0
       ae(6,2) = 9906641229361.d0/6773542326211.d0
       ae(6,3) = 748542674826.d0/3316074581447.d0
       ae(6,4) =-21326364737279.d0/21462558358660.d0
       ae(6,5) = 468303406082.d0/9673103989413.d0
       ae(7,1) = 4248768930433.d0/8548497193080.d0
       ae(7,2) = 3986375132967.d0/5449339302736.d0
       ae(7,3) = 42902796173105.d0/9077643837154.d0
       ae(7,4) =-16273891261881.d0/6245028350290.d0
       ae(7,5) = 26785347536350.d0/13186573950609.d0
       ae(7,6) =-40553572975904.d0/9216468614781.d0
       ae(8,1) = 324300256064.d0/1716627136655.d0
       ae(8,2) = 7446596577595.d0/3049381383767.d0
       ae(8,3) = 19969715290400.d0/8267154297907.d0
       ae(8,4) =-31141308231623.d0/8013374019263.d0
       ae(8,5) = 18761920104660.d0/8084729975743.d0
       ae(8,6) =-34147752538889.d0/12468251948840.d0
       ae(8,7) = 531947.d0/4933960.d0
c
       ai(2,1) = 3.d0/20.d0
       ai(2,2) = 3.d0/20.d0
       ai(3,1) = 3.d0/40.d0
       ai(3,2) = 1731023804601.d0/3570537526921.d0
       ai(3,3) = 3.d0/20.d0
       ai(4,1) = 1605041720149.d0/11421659380059.d0
       ai(4,2) = 654594117891.d0/6965365988404.d0
       ai(4,3) =-352837481126.d0/14398846790579.d0
       ai(4,4) = 3.d0/20.d0
       ai(5,1) = 406408370843.d0/6513901876155.d0
       ai(5,2) = 21880293107371.d0/22681476820040.d0
       ai(5,3) = 191823526077.d0/15456371897530.d0
       ai(5,4) =-4303122672413.d0/6427575936786.d0
       ai(5,5) = 3.d0/20.d0
       ai(6,1) = 68838037603.d0/6521073420171.d0
       ai(6,2) = 11555379543628.d0/10209784218577.d0
       ai(6,3) = 230918760203.d0/4672268318226.d0
       ai(6,4) =-2356488305727.d0/3753372308143.d0
       ai(6,5) = 315690437904.d0/19659281995481.d0
       ai(6,6) = 3.d0/20.d0
       ai(7,1) = 3815154942581.d0/7930979877242.d0
       ai(7,2) =-11176834612004.d0/7038902380423.d0
       ai(7,3) = 31932511553810.d0/17399899666599.d0
       ai(7,4) = 8589217578848.d0/11858238479937.d0
       ai(7,5) = 2594720719533.d0/1820781439361.d0
       ai(7,6) =-66403214105722.d0/32427012678927.d0
       ai(7,7) = 3.d0/20.d0
       ai(8,1) = 1712296876613.d0/10208794068945.d0
       ai(8,2) = 2675262465535.d0/3855538473734.d0
       ai(8,3) = 11860586325276.d0/14150835827099.d0
       ai(8,4) =-9471348262924.d0/8953205860337.d0
       ai(8,5) = 10372298403633.d0/8896662999724.d0
       ai(8,6) =-1935277746743.d0/1663537276741.d0
       ai(8,7) = 5486767.d0/98679200.d0
       ai(8,8) = 3.d0/20.d0
c
       do i=1,ns
         bi(i)  = be(i)
         bih(i)  = beh(i)
       enddo
!
      p(0,0) = 1.0d0
      p(0,1) = 1.0d0
      p(0,2) = 0.5000000000000000000000000
      p(0,3) = 0.1666666666666666666666666
      p(0,4) = 0.0416666666666666666666666
      p(0,5) = 0.0083333333333333333333333
      p(0,6) = 0.0013888888888888888888888
      p(0,7) = 0.0001984126984126984126984
      p(0,8) = 0.0000248015873015873015873
!
      p(1,0) = 0.5000000000000000000000000
      p(1,1) = 0.5000000000000000000000001
      p(1,2) = 0.0250000000000000000000000
      p(1,3) = 0.0083333333333333333333333
      p(1,4) = 0.0020833333333333333333333
      p(1,5) = 0.0021122539632328782540689
      p(1,6) = 0.0010716896989573004640188
      p(1,7) = 0.0001342452985426173216322
!
      p(2,0) = 0.0775000000000000000000000
      p(2,1) = 0.0775000000000000000000000
      p(2,2) = 0.0387500000000000000000000
      p(2,3) = 0.0129166666666666666666666
      p(2,4) = 0.0053046888317232147894490
      p(2,5) = 0.0028744362483298204737022
      p(2,6) = 0.0002624966475475229926779
!
      p(3,0) = 0.0039583333333333333333333
      p(3,1) = 0.0039583333333333333333333
      p(3,2) = 0.0001979166666666666666666
      p(3,3) = 0.0099660599830480602674213
      p(3,4) = 0.0035449483652324828958483
      p(3,5) = 0.0001852308233639883066572
!
      p(4,0) = 0.0025104166666666666666666
      p(4,1) = 0.0025104166666666666666666
      p(4,2) = 0.0070494601968738621986444
      p(4,3) = 0.0017415193852311955162070
      p(4,4) = 0.0000304745183440417005819
!
      p(5,0) = 0.00039489583333333333333333
      p(5,1) = 0.00159687178866534481580955
      p(5,2) = 0.00009994058252391239577427
      p(5,3) = 0.00009078047924351914906137
!
      p(6,0) = 0.00001188219246031746031746
      p(6,1) = 0.00009608109151001864696625
      p(6,2) = 0.00002812807384198211445515
!
      p(7,0) = 0.0d0
      p(7,1) = 0.0d0
!
      p(8,0) = 0.0d0
c
      elseif(icase.eq.22) then
       print*,'ARK5(4)9L[2]'
c
       ns = 9
c
       be(1) = 88259.d0/935550.d0
       be(2) = 0.d0
       be(3) = 0.d0
       be(4) = 0.d0
       be(5) = 8779.d0/10374.d0
       be(6) =-7058.d0/13365.d0
       be(7) = 3379.d0/4050.d0
       be(8) = 16591.d0/150150.d0
       be(9) = -211712.d0/592515.d0
c
c p8h/q8 = +0.10 - 0.0201377*z_ns
c
c      beh(1) = 1303365698732.d0/13855303274237.d0
c      beh(2) = 0.d0
c      beh(3) = 0.d0
c      beh(4) = 0.d0
c      beh(5) = 4819150635504.d0/5672803102043.d0
c      beh(6) =-25802798949613.d0/48508306545847.d0
c      beh(7) = 4059639552868.d0/4864859859921.d0
c      beh(8) = 371924426891.d0/3382362469079.d0
c      beh(9) = -4532165177982.d0/12727043113193.d0
c
c p8h/q8 = +0.20 - 0.0402753*z_ns
c
c      beh(1) = 865251476755.d0/9224384711321.d0
c      beh(2) = 0.d0
c      beh(3) = 0.d0
c      beh(4) = 0.d0
c      beh(5) = 4619271979045.d0/5416680048032.d0
c      beh(6) =-3732062925991.d0/6965988447262.d0
c      beh(7) = 4172540361470.d0/4999187770963.d0
c      beh(8) = 1385067263425.d0/12657831424477.d0
c      beh(9) =-2500990747139.d0/7047040381885.d0
c
c p8h/q8 = +0.30 - 0.060413*z_ns
c
c      beh(1) = 1160766252263.d0/12410484067075.d0
c      beh(2) = 0.d0
c      beh(3) = 0.d0
c      beh(4) = 0.d0
c      beh(5) = 15459969688989.d0/18059557602286.d0
c      beh(6) =-8752363607722.d0/16220559546127.d0
c      beh(7) = 5143977599252.d0/6161891284475.d0
c      beh(8) = 502645430947.d0/4616189295788.d0
c      beh(9) =-3424243859507.d0/9681379906383.d0
c
c p8h/q8 = +0.40 - 0.0805507*z_ns
c
c      beh(1) = 886823602423.d0/9508974512773.d0
c      beh(2) = 0.d0
c      beh(3) = 0.d0
c      beh(4) = 0.d0
c      beh(5) = 6041599377969.d0/7030651035341.d0
c      beh(6) =-4443924162977.d0/8177784905536.d0
c      beh(7) = 8513235840415.d0/10195903210462.d0
c      beh(8) = 1259595768139.d0/11625108713344.d0
c      beh(9) =-179043290048.d0/507941357029.d0
c
c p8h/q8 = +0.50 - 0.100688*z_ns
c
       beh(1) = 852461723165.d0/9167004453202.d0
       beh(2) = 0.d0
       beh(3) = 0.d0
       beh(4) = 0.d0
       beh(5) = 24575983505058.d0/28490886129185.d0
       beh(6) =-6356718920277.d0/11615881872625.d0
       beh(7) = 8792997080242.d0/10528925695689.d0
       beh(8) = 734471614673.d0/6812326308101.d0
       beh(9) =-8195728222993.d0/23330879083681.d0
c
c p8h/q8 = +0.60 - 0.120826*z_ns
c
c      beh(1) = 998946236825.d0/10773440761744.d0
c      beh(2) = 0.d0
c      beh(3) = 0.d0
c      beh(4) = 0.d0
c      beh(5) = 962535895631.d0/1111654038821.d0
c      beh(6) =-3422865495892.d0/6211270093503.d0
c      beh(7) = 4396892186861.d0/5263917296843.d0
c      beh(8) = 715393736976.d0/6668542120237.d0
c      beh(9) =-1571292869441.d0/4488423622784.d0
c
       ae(2,1) = 7.d0/20.d0
       ae(3,1) = 1622533886882.d0/10705947158407.d0
       ae(3,2) = 2445980393239.d0/34775326102420.d0
       ae(4,1) = 1263635653341.d0/12071617512068.d0
       ae(4,2) = 0.d0
       ae(4,3) = 182434884448.d0/2829561382829.d0
       ae(5,1) = 580968954301.d0/6271525828644.d0
       ae(5,2) = 0.d0
       ae(5,3) = 5960726105553.d0/17744173270507.d0
       ae(5,4) =-581317275146.d0/7399489286269.d0
       ae(6,1) = 1168610531437.d0/7254773462588.d0
       ae(6,2) = 0.d0
       ae(6,3) = 7581866708404.d0/10075220888875.d0
       ae(6,4) =-6198947530466.d0/11613149372077.d0
       ae(6,5) = 1068281273022.d0/15222183368311.d0
       ae(7,1) = 19695390373633.d0/9411068421034.d0
       ae(7,2) = 0.d0
       ae(7,3) =-4046660026289.d0/5568890588347.d0
       ae(7,4) =-59633607841338.d0/11028728979713.d0
       ae(7,5) = 104117462895568.d0/13033847229745.d0
       ae(7,6) =-2664381333997.d0/833333376889.d0
       ae(8,1) = 134270403756253.d0/21758427396433.d0
       ae(8,2) = 0.d0
       ae(8,3) =-39012342338445.d0/12685989267107.d0
       ae(8,4) =-603182156780769.d0/44144361278855.d0
       ae(8,5) = 123891324548079.d0/8434143180541.d0
       ae(8,6) =-12324102085916.d0/5333132115253.d0
       ae(8,7) =-5213622539170.d0/6434353871979.d0
       ae(9,1) = 132994820623211.d0/19703239322892.d0
       ae(9,2) = 0.d0
       ae(9,3) =-34031209016812.d0/11480172865327.d0
       ae(9,4) =-122958258451885.d0/7567489150103.d0
       ae(9,5) = 115417116409806.d0/6238483226527.d0
       ae(9,6) =-52823000162096.d0/14458359327517.d0
       ae(9,7) =-38231480286562.d0/20123029021809.d0
       ae(9,8) = 2802933807905.d0/8239350341653.d0
c
       ai(2,1) = 7.d0/40.d0 
       ai(2,2) = 7.d0/40.d0
       ai(3,1) = 7.d0/80.d0 
       ai(3,2) = - 3804796535495.d0/93693681639481.d0
       ai(3,3) = 7.d0/40.d0 
       ai(4,1) = 4086166011925.d0/64772501153852.d0
       ai(4,2) = 0.d0
       ai(4,3) = -2435969253397.d0/35338711372465.d0
       ai(4,4) = 7.d0/40.d0
       ai(5,1) = - 2091640461928.d0/135949654867159.d0
       ai(5,2) = 0.d0
       ai(5,3) = -73201172311446.d0/119875602454571.d0
       ai(5,4) = 60950043677311.d0/76089760752962.d0
       ai(5,5) = 7.d0/40.d0
       ai(6,1) = 18825860268053.d0/141729908204012.d0
       ai(6,2) = 0.d0
       ai(6,3) = 204097878113288.d0/165609358282019.d0
       ai(6,4) = -49191509760151.d0/68105864066533.d0
       ai(6,5) = -39581270506766.d0/107571100061105.d0
       ai(6,6) = 7.d0/40.d0
       ai(7,1) = 135085128809828.d0/194286550482543.d0
       ai(7,2) = 0.d0
       ai(7,3) = 181730322618217.d0/50649434398880.d0
       ai(7,4) = -360926369211297.d0/90926347392473.d0
       ai(7,5) = 106682622911249.d0/115682871510477.d0
       ai(7,6) = -42648098176363.d0/64515351625084.d0
       ai(7,7) = 7.d0/40.d0
       ai(8,1) = 41623036542890.d0/75637898517363.d0
       ai(8,2) = 0.d0
       ai(8,3) = -1692867011465505.d0/220559976414119.d0
       ai(8,4) = 246345429011863.d0/88848435906271.d0
       ai(8,5) = 524624600915671.d0/62949216413634.d0
       ai(8,6) = -186404014119968.d0/55384511293675.d0
       ai(8,7) = 16931066662313.d0/81043183726823.d0
       ai(8,8) = 7.d0/40.d0
       ai(9,1) = 54296922726214.d0/41866983543283.d0
       ai(9,2) = 0.d0
       ai(9,3) = 254412900681057.d0/92961838675409.d0
       ai(9,4) = -824319972043769.d0/151346956525011.d0
       ai(9,5) = 560853778185585.d0/135163550045827.d0
       ai(9,6) = -176271359507291.d0/86827951181315.d0
       ai(9,7) = -5951336276113.d0/53848672125149.d0
       ai(9,8) = 59578281.d0/1100902400.d0
       ai(9,9) = 7.d0/40.d0
c
       do i=1,ns
         bi(i)  = be(i)
         bih(i) = beh(i)
       enddo
c
      elseif(icase.eq.23) then
       print*,'Fritzen ZAMM S551, Math. Meth. Appl. Sci., V20'
c
       ns = 5
c
       be(1) =  1.d0/6.d0
       be(2) =  1.d0/6.d0
       be(3) =  0.d0
       be(4) =  4.d0/6.d0
       be(5) =  0.d0
c
       bi(1) =  1.d0/6.d0
       bi(2) =  1.d0/6.d0
       bi(3) = -1.d0/6.d0
       bi(4) =  4.d0/6.d0
       bi(5) =  1.d0/6.d0
c
       ae(2,1) = 1.d0
       ae(3,1) = 1.d0/2.d0
       ae(3,2) = 1.d0/2.d0
       ae(4,1) = 1.d0/4.d0
       ae(4,2) = 1.d0/4.d0
       ae(4,3) = 0.d0
       ae(5,1) = 1.d0/6.d0
       ae(5,2) = 1.d0/6.d0
       ae(5,3) = 0.d0
       ae(5,4) = 4.d0/6.d0
c
       ai(2,1) = 0.d0
       ai(2,2) = 1.d0
       ai(3,1) = 1.d0/2.d0
       ai(3,2) = 0.d0
       ai(3,3) = 1.d0/2.d0
       ai(4,1) = 1.d0/4.d0
       ai(4,2) =-1.d0/4.d0
       ai(4,3) = 0.d0
       ai(4,4) = 1.d0/2.d0
       ai(5,1) = 1.d0/6.d0
       ai(5,2) = 1.d0/6.d0
       ai(5,3) =-1.d0/6.d0
       ai(5,4) = 4.d0/6.d0
       ai(5,5) = 1.d0/6.d0
c
       do i=1,ns
         bih(i) = beh(i)
       enddo
c
      elseif(icase.eq.24) then
       print*,'ARK4(3)6L[2]d'
c
       ns = 6
c
       be(1) = 192821.d0/1992060.d0
       be(2) = 5132.d0/115515.d0
       be(3) = 154478.d0/375921.d0
       be(4) = 1400801916209.d0/13471465968549.d0
       be(5) = 26011.d0/91188.d0
       be(6) = 73033.d0/1245930.d0
c------------------------------------------------------
c B5e = 1.72289, C5e = 1.35769, E5e = 1.28833
c B5i = 2.3075,  C5i = 1.53787, E5i = 1.99375
c
       beh(1) = +167324146223.d0/1817878617627.d0
       beh(2) = +258023347490.d0/6187898269173.d0
       beh(3) = +10478176813670.d0/24812595227341.d0
       beh(4) = +2316381188213.d0/21352232451715.d0
       beh(5) = +5232896335078.d0/19510636606705.d0
       beh(6) = +1446987395161.d0/21508855571111.d0
c
c------------------------------------------------------
c
       ae(2,1) = 1.d0/2.d0
       ae(3,1) = 22211455057192.d0/116026132850761.d0
       ae(3,2) = 12606921271847.d0/116123185007371.d0
       ae(4,1) =-1202080151593.d0/8381095094245.d0
       ae(4,2) =-3228548557691.d0/13295308824860.d0
       ae(4,3) = 15253016843831.d0/14705087066993.d0
       ae(5,1) =-347037288303.d0/2456174672881.d0
       ae(5,2) =-2237341885521.d0/13217384594591.d0
       ae(5,3) = 9553465927059.d0/11089196592194.d0
       ae(5,4) = 2384485361395.d0/9574195325768.d0
       ae(6,1) = 3156932255035.d0/3619123414357.d0
       ae(6,2) = 4903270772158.d0/5620672511973.d0
       ae(6,3) =-17698956500478.d0/15731684697869.d0
       ae(6,4) =-7030220078607.d0/11858288073623.d0
       ae(6,5) = 63544873.d0/65291502.d0
c
       ai(2,1) = 1.d0/4.d0
       ai(2,2) = 1.d0/4.d0
       ai(3,1) = 11.d0/100.d0
       ai(3,2) =-3.d0/50.d0
       ai(3,3) = 1.d0/4.d0
       ai(4,1) =-135374129011.d0/11677394713595.d0
       ai(4,2) =-6854467658237.d0/18369853861336.d0
       ai(4,3) = 5839559395984.d0/7432021727151.d0
       ai(4,4) = 1.d0/4.d0
       ai(5,1) =-287678996206.d0/11447981065511.d0
       ai(5,2) =-5503586913052.d0/10966971048559.d0
       ai(5,3) = 10441313144772.d0/11099507633009.d0
       ai(5,4) = 1394521931888.d0/10234154466143.d0
       ai(5,5) = 1.d0/4.d0
       ai(6,1) = 7643636817136.d0/8846403118617.d0
       ai(6,2) = 14826364340859.d0/4445545803949.d0
       ai(6,3) =-33661720175549.d0/11571659144176.d0
       ai(6,4) = 8311383073579.d0/10985800238576.d0
       ai(6,5) =-677319307.d0/522332016.d0
       ai(6,6) = 1.d0/4.d0
c
       do i=1,ns
         bi(i)  = be(i)
         bih(i) = beh(i)
       enddo
c      
      elseif(icase.eq.25) then
       print*,'ARK4(3)6L[2]SAc -> C^{[E]}(2)+C^{[I]}(2) '
c
       ns = 6
c
       be(1) = 82889.d0/524892.d0
       be(2) = 0.d0
       be(3) = 15625.d0/83664.d0
       be(4) = 69875.d0/102672.d0
       be(5) =-2260.d0/8211.d0
       be(6) = 1.d0/4.d0
c------------------------------------------------------
c B5e = 4.09963 B5i = 5.47914 C5e = 1.35811
c C5i = 1.38062 E5e = 2.90161 E5i = 4.12639
c
       beh(1) = +4586570599.d0/29645900160.d0
       beh(2) = 0.d0
       beh(3) = +178811875.d0/945068544.d0
       beh(4) = +814220225.d0/1159782912.d0
       beh(5) = -3700637.d0/11593932.d0
       beh(6) = +61727.d0/225920.d0
c
c------------------------------------------------------
c
       ae(2,1) = 1.d0/2.d0
       ae(3,1) = 13861.d0/62500.d0
       ae(3,2) = 6889.d0/62500.d0
       ae(4,1) =-116923316275.d0/2393684061468.d0
       ae(4,2) =-2731218467317.d0/15368042101831.d0
       ae(4,3) = 9408046702089.d0/11113171139209.d0
       ae(5,1) =-451086348788.d0/2902428689909.d0
       ae(5,2) =-2682348792572.d0/7519795681897.d0
       ae(5,3) = 12662868775082.d0/11960479115383.d0
       ae(5,4) = 3355817975965.d0/11060851509271.d0
       ae(6,1) = 647845179188.d0/3216320057751.d0
       ae(6,2) = 73281519250.d0/8382639484533.d0
       ae(6,3) = 552539513391.d0/3454668386233.d0
       ae(6,4) = 3354512671639.d0/8306763924573.d0
       ae(6,5) = 4040.d0/17871.d0
c
       ai(2,1) = 1.d0/4.d0
       ai(2,2) = 1.d0/4.d0
       ai(3,1) = 8611.d0/62500.d0
       ai(3,2) =-1743.d0/31250.d0
       ai(3,3) = 1.d0/4.d0
       ai(4,1) = 5012029.d0/34652500.d0
       ai(4,2) =-654441.d0/2922500.d0
       ai(4,3) = 174375.d0/388108.d0
       ai(4,4) = 1.d0/4.d0
       ai(5,1) = 15267082809.d0/155376265600.d0
       ai(5,2) =-71443401.d0/120774400.d0
       ai(5,3) = 730878875.d0/902184768.d0
       ai(5,4) = 2285395.d0/8070912.d0
       ai(5,5) = 1.d0/4.d0
       ai(6,1) = 82889.d0/524892.d0
       ai(6,2) = 0.d0
       ai(6,3) = 15625.d0/83664.d0
       ai(6,4) = 69875.d0/102672.d0
       ai(6,5) =-2260.d0/8211.d0
       ai(6,6) = 1.d0/4.d0
c
c Third-order dense output -> b_{i}^{*} = sum_{j=1}^{p*} b_{ij}^{*}\theta^{j}
c
       if( pstar .eq. 3) then
        bd(1,1) = 6943876665148.d0/7220017795957.d0
        bd(2,1) = 0.d0
        bd(3,1) = 7640104374378.d0/9702883013639.d0
        bd(4,1) = -20649996744609.d0/7521556579894.d0
        bd(5,1) = 8854892464581.d0/2390941311638.d0
        bd(6,1) =-11397109935349.d0/6675773540249.d0
        bd(1,2) =-54480133.d0/30881146.d0
        bd(2,2) = 0.d0
        bd(3,2) =-11436875.d0/14766696.d0
        bd(4,2) = 174696575.d0/18121608.d0
        bd(5,2) =-12120380.d0/966161.d0
        bd(6,2) = 3843.d0/706.d0
        bd(1,3) = 6818779379841.d0/7100303317025.d0
        bd(2,3) = 0.d0
        bd(3,3) = 2173542590792.d0/12501825683035.d0
        bd(4,3) =-31592104683404.d0/5083833661969.d0
        bd(5,3) =+61146701046299.d0/7138195549469.d0
        bd(6,3) =-17219254887155.d0/4939391667607.d0
c
        zero = 0.d0
        do i = 1, ns
         bdsum(i) = 0.d0
         do j = 1, pstar
          bdsum(i) = bdsum(i) + bd(i,j)
         enddo
         bdsum(i) = abs( bdsum(i) - be(i))
         zero = zero + bdsum(i)**2
        enddo
        if( sqrt(zero) .gt. 1.0d-10 ) then
         print*,' Case 25, p*=3 is inconsistent '
        endif
       endif
c
c
c Second-order dense output -> b_{i}^{*} = sum_{j=1}^{p*} b_{ij}^{*}\theta^{j}
c
       if( pstar .eq. 2) then
        bd(1,1) = 5701579834848.d0/6164663940925.d0
        bd(2,1) = 0.d0
        bd(3,1) = 13131138058924.d0/17779730471019.d0
        bd(4,1) =-28096677048929.d0/11161768239540.d0
        bd(5,1) = 42062433452849.d0/11720557422164.d0
        bd(6,1) =-25841894007917.d0/14894670528776.d0
        bd(1,2) =-7364557999481.d0/9602213853517.d0
        bd(2,2) = 0.d0
        bd(3,2) =-6355522249597.d0/11518083130066.d0
        bd(4,2) = 29755736407445.d0/9305094404071.d0
        bd(5,2) =-38886896333129.d0/10063858340160.d0
        bd(6,2) = 22142945955077.d0/11155272088250.d0
c
        zero = 0.d0
        do i = 1, ns
         bdsum(i) = 0.d0
         do j = 1, pstar
          bdsum(i) = bdsum(i) + bd(i,j)
         enddo
         bdsum(i) = abs( bdsum(i) - be(i))
         zero = zero + bdsum(i)**2
        enddo
        if( sqrt(zero) .gt. 1.0d-10 ) then
         print*,' Case 25, p*=2 is inconsistent '
        endif
       endif
c
       do i=1,ns
         bi(i)  = be(i)
         bih(i) = beh(i)
       enddo
c
      elseif(icase.eq.26) then
       print*,'ARK4(3)6L[2]SAe -> C^{[E]}(2)+C^{[I]}(3) '
c
       ns = 6
c
       be(1) = 2834623777653.d0/26906817174524.d0
       be(2) = 0.d0
       be(3) = 4079485946257.d0/9358623902187.d0
       be(4) = 1949886071195.d0/4030519482993.d0
       be(5) =-419653551822.d0/1525809906703.d0
       be(6) = 1.d0/4.d0
c------------------------------------------------------
c B5e = 3.91316 C5e = 1.33515 E5e = 2.81565
c B5i = 5.43922 C5i = 1.89029 E5i = 4.07663
c
       beh(1) = +850233530267.d0/7617317741865.d0
       beh(2) = 0.d0
       beh(3) = +2353973301757.d0/5618343433312.d0
       beh(4) = +4600875836615.d0/8897330496886.d0
       beh(5) = -2420296691065.d0/7524082998448.d0
       beh(6) = +3133574984401.d0/11437765310009.d0
c
c------------------------------------------------------
c
       ae(2,1) = 1.d0/2.d0
       ae(3,1) = 2199541821749.d0/10159248503045.d0
       ae(3,2) = 818631627454.d0/8147132870243.d0
       ae(4,1) =-4145699454400.d0/8940930314649.d0
       ae(4,2) =-2664948150742.d0/5185748112705.d0
       ae(4,3) = 18228318020533.d0/10423274688630.d0
       ae(5,1) =-976539063016.d0/1544623296551.d0
       ae(5,2) =-3784793808992.d0/6243935619245.d0
       ae(5,3) = 35431675292482.d0/17242735595717.d0
       ae(5,4) = 192090524447.d0/1438902883326.d0
       ae(6,1) = 778501314283.d0/7705458084894.d0
       ae(6,2) = 356902627049.d0/2341952647602.d0
       ae(6,3) = 590226173053.d0/1354149239742.d0
       ae(6,4) = 233635007685.d0/4381090399162.d0
       ae(6,5) = 1815924924181.d0/7055444407633.d0
c
       ai(2,1) = 1.d0/4.d0
       ai(2,2) = 1.d0/4.d0
       ai(3,1) = 1.d0/8.d0
       ai(3,2) =-685497852586.d0/11816340736199.d0
       ai(3,3) = 1.d0/4.d0
       ai(4,1) = 52920034407.d0/6115188259195.d0
       ai(4,2) =-2581862900803.d0/8162419824178.d0
       ai(4,3) = 15401743608433.d0/18581139755562.d0
       ai(4,4) = 1.d0/4.d0
       ai(5,1) =-898051810951.d0/6555027953449.d0
       ai(5,2) =-2300599048126.d0/3548526458713.d0
       ai(5,3) = 11299807919202.d0/8447519174845.d0
       ai(5,4) = 500561058752.d0/3389519422739.d0
       ai(5,5) = 1.d0/4.d0
       ai(6,1) = 2834623777653.d0/26906817174524.d0
       ai(6,2) = 0.d0
       ai(6,3) = 4079485946257.d0/9358623902187.d0
       ai(6,4) = 1949886071195.d0/4030519482993.d0
       ai(6,5) =-419653551822.d0/1525809906703.d0
       ai(6,6) = 1.d0/4.d0
c
c Third-order dense output -> b_{i}^{*} = sum_{j=1}^{p*} b_{ij}^{*}\theta^{j}
c
       if( pstar .eq. 3) then
        bd(1,1) = 1613909225751.d0/7647481495745.d0
        bd(2,1) = 0.d0
        bd(3,1) = 20756680432095.d0/9902769067766.d0
        bd(4,1) =-40167351336390.d0/10481229022987.d0
        bd(5,1) = 119096941506255.d0/25444043353774.d0
        bd(6,1) =-12121709489177.d0/5623585485500.d0
        bd(1,2) = 3678484476915.d0/13854139406678.d0
        bd(2,2) = 0.d0
        bd(3,2) =-39440867685164.d0/10145336601931.d0
        bd(4,2) = 50070643925704.d0/4514447579591.d0
        bd(5,2) =-201225775958821.d0/15537880974937.d0
        bd(6,2) = 46747379019977.d0/8528166233443.d0
        bd(1,3) =-3029089530393.d0/8160184821296.d0
        bd(2,3) = 0.d0
        bd(3,3) = 21388218321119.d0/9602133407507.d0
        bd(4,3) =-68751783017323.d0/10147704073621.d0
        bd(5,3) = 26817321325241.d0/3354311346605.d0
        bd(6,3) =-49100647070646.d0/15962421052343.d0
c
        zero = 0.d0
        do i = 1, ns
         bdsum(i) = 0.d0
         do j = 1, pstar
          bdsum(i) = bdsum(i) + bd(i,j)
         enddo
         bdsum(i) = abs( bdsum(i) - be(i))
         zero = zero + bdsum(i)**2
         enddo
        if( sqrt(zero) .gt. 1.0d-10 ) then
         print*,' Case 26, p*=3 is inconsistent '
        endif
       endif
c
c Second-order dense output -> b_{i}^{*} = sum_{j=1}^{p*} b_{ij}^{*}\theta^{j}
c
       if( pstar .eq. 2) then
        bd(1,1) = 738340072723.d0/5911523356671.d0
        bd(2,1) = 0.d0
        bd(3,1) = 29463433973966.d0/10609804863029.d0
        bd(4,1) =-34186487158784.d0/5652980715789.d0
        bd(5,1) = 49063607580223.d0/6779737210949.d0
        bd(6,1) =-38159034840811.d0/12344470080880.d0
        bd(1,2) =-374247566228.d0/19144278565871.d0
        bd(2,2) = 0.d0
        bd(3,2) =-16856625935066.d0/7200320144225.d0
        bd(4,2) = 21927678382782.d0/3357324446585.d0
        bd(5,2) =-91074458425739.d0/12124125413873.d0
        bd(6,2) = 33995564555115.d0/10174704310942.d0
c
        zero = 0.d0
        do i = 1, ns
         bdsum(i) = 0.d0
         do j = 1, pstar
          bdsum(i) = bdsum(i) + bd(i,j)
         enddo
         bdsum(i) = abs( bdsum(i) - be(i))
         zero = zero + bdsum(i)**2
        enddo
        if( sqrt(zero) .gt. 1.0d-10 ) then
         print*,' Case 26, p*=2 is inconsistent '
        endif
       endif
c
       do i=1,ns
         bi(i)  = be(i)
         bih(i) = beh(i)
       enddo
c
      elseif(icase.eq.27) then
       print*,'ARK5(3)8L[2]SAa'
c
       ns = 8
c
       be(1) =  69549.d0/842800.d0
       be(2) =  0.d0
       be(3) =  0.d0
       be(4) =  63475.d0/147784.d0
       be(5) =  1408.d0/337365.d0
       be(6) =  81553.d0/84240.d0
       be(7) = -360200.d0/572373.d0
       be(8) =  29.d0/200.d0
c 1/24.0, 1/120.5, p7h/q7 = 3/20, p71h/q7 ~ 0.48
c      beh(1) = 291020234525.d0/3139757614019.d0
c      beh(2) = 0.d0
c      beh(3) =-3416714653493.d0/71214492512546.d0
c      beh(4) = 4335808143331.d0/9033354834290.d0
c      beh(5) =-39741392489.d0/7310581895572.d0
c      beh(6) = 17974683350317.d0/18821161945785.d0
c      beh(7) =-3140777348110.d0/5078218132261.d0
c      beh(8) = 604103521251.d0/4189269353684.d0
c 1/24.0, 1/120.5, p7h/q7 = 3/30, p71h/q7 = 0.369886 zns
c      beh(1) = 150724654126.d0/1618957858499.d0
c      beh(2) = 0.d0
c      beh(3) =-450984660420.d0/9142375458037.d0
c      beh(4) = 5596562677255.d0/11651431936624.d0
c      beh(5) =-29529986324.d0/6278837474361.d0
c      beh(6) = 18303707680795.d0/19164140715413.d0
c      beh(7) =-11115130886777.d0/17960141188813.d0
c      beh(8) = 745514745045.d0/5163720169394.d0
c 1/24.0, 1/120.5, p7h/q7 = 3/45, p71h/q7 = 0.296065 zns
c      beh(1) = 820620011087.d0/8788544055510.d0
c      beh(2) = 0.d0
c      beh(3) =-975776143079.d0/19426210057176.d0
c      beh(4) = 6921043500483.d0/14401760565085.d0
c      beh(5) =-36287832678.d0/8610441276227.d0
c      beh(6) = 30325201534314.d0/31749048055823.d0
c      beh(7) =-6772401564103.d0/10938353180744.d0
c      beh(8) = 1611170229586.d0/11150677767991.d0
c 1/24.0, 1/120.5, p7h/q7 = 1/25, p71h/q7 = 0.237007 zns
       beh(1) = 354702883506.d0/3789842051159.d0
       beh(2) = 0.d0
       beh(3) =-471861028701.d0/9261158205962.d0
       beh(4) = 3832214029186.d0/7971181559071.d0
       beh(5) =-19522742290.d0/5106068051629.d0
       beh(6) = 16391434965105.d0/17160319691969.d0
       beh(7) =-14302054201217.d0/23091863285126.d0
       beh(8) = 5188720167746.d0/35887481870821.d0
c
       ae(2,1) = 29.d0/100.d0
       ae(3,1) = 944910679331.d0/7524750828578.d0
       ae(3,2) = 660853995437.d0/11339497413130.d0
       ae(4,1) = 180760519472.d0/2625246102345.d0
       ae(4,2) = 20179003510.d0/5631078336433.d0
       ae(4,3) = 1464240148925.d0/7054478020818.d0
       ae(5,1) = 741325417419.d0/9746117598221.d0
       ae(5,2) =-130861487014.d0/7978308085659.d0
       ae(5,3) = 4281440129485.d0/26926026466106.d0
       ae(5,4) = 1722392411120.d0/13114896361873.d0
       ae(6,1) = 3412474983791.d0/9529678537242.d0
       ae(6,2) =-114842598508.d0/12841798577357.d0
       ae(6,3) = 4332443345927.d0/5595573980001.d0
       ae(6,4) =-244349193268071.d0/58290135536479.d0
       ae(6,5) = 51692289640300.d0/13362226251439.d0
       ae(7,1) = 9314289618025.d0/11063933590792.d0
       ae(7,2) =-75527264486.d0/9963982644355.d0
       ae(7,3) =-107137012541.d0/12167021317634.d0
       ae(7,4) =-24184357752382.d0/4251908963329.d0
       ae(7,5) = 40255603180768.d0/6936099101739.d0
       ae(7,6) =-835135591679.d0/10262908731418.d0
       ae(8,1) = 6054878767476.d0/3724041188809.d0
       ae(8,2) = 113180638915.d0/6790649733471.d0
       ae(8,3) =-22939987974967.d0/3936814631902.d0
       ae(8,4) = 46576895309446.d0/8576095576761.d0
       ae(8,5) =-2081598079153.d0/3351669477984.d0
       ae(8,6) = 9116964059898.d0/9282705697771.d0
       ae(8,7) =-10085600.d0/16598817.d0
c
       ai(2,1) = 29.d0/200.d0
       ai(2,2) = 29.d0/200.d0
       ai(3,1) = 29.d0/400.d0
       ai(3,2) =-350623571328.d0/10420535143571.d0
       ai(3,3) = 29.d0/200.d0
       ai(4,1) = 807226490794.d0/11294700695621.d0
       ai(4,2) =-874668641845.d0/7098011249891.d0
       ai(4,3) = 2182184544357.d0/11684570159401.d0
       ai(4,4) = 29.d0/200.d0
       ai(5,1) = 145253674553.d0/8663875643876.d0
       ai(5,2) = 15128786102297.d0/11906071161648.d0
       ai(5,3) = 6152117303669.d0/10771869990990.d0
       ai(5,4) =-15616452376054.d0/9444072785965.d0
       ai(5,5) = 29.d0/200.d0
       ai(6,1) = 6091186570339.d0/15702166824390.d0
       ai(6,2) = 3455924488897.d0/7171035336684.d0
       ai(6,3) =-10979430586178.d0/7250509791871.d0
       ai(6,4) = 22232248077499.d0/13875476324503.d0
       ai(6,5) =-3121948903746.d0/10309592483189.d0
       ai(6,6) = 29.d0/200.d0
       ai(7,1) = 5104696209616.d0/9675258774483.d0
       ai(7,2) = 10291357491335.d0/15459444993913.d0
       ai(7,3) =-28707109686536.d0/13058909764101.d0
       ai(7,4) = 34789977277050.d0/15818991491101.d0
       ai(7,5) =-26433723305593.d0/53141752197286.d0
       ai(7,6) = 1359046691.d0/74921600000.d0
       ai(7,7) = 29.d0/200.d0
       ai(8,1) = 69549.d0/842800.d0
       ai(8,2) = 0.d0
       ai(8,3) = 0.d0
       ai(8,4) = 63475.d0/147784.d0
       ai(8,5) = 1408.d0/337365.d0
       ai(8,6) = 81553.d0/84240.d0
       ai(8,7) =-360200.d0/572373.d0
       ai(8,8) = 29.d0/200.d0
c
       do i=1,ns
         bi(i)  = be(i)
         bih(i) = beh(i)
       enddo
c
      elseif(icase.eq.28) then
       print*,'ARK5(3)8L[2]SAc - C(3)E + C(3)I'
c
       ns = 8
c
       be(1) = 29346697.d0/421457400.d0
       be(2) = 0.d0
       be(3) = 0.d0
       be(4) = 3259595.d0/7327008.d0
       be(5) =-276035.d0/5868576.d0
       be(6) = 42549344.d0/37405995.d0
       be(7) =-4800590.d0/6401043.d0
       be(8) = 29.d0/200.d0
c 1/24.0, 1/120.5, p7h/q7 = 1/25, p71h/q7 = 0.237007 zns
       beh(1) = 960384472983.d0/11777881918469.d0
       beh(2) = 0.d0
       beh(3) =-299325384543.d0/4775483499893.d0
       beh(4) = 4490174714953.d0/8886419704749.d0
       beh(5) =-420926894048.d0/7421698145133.d0
       beh(6) = 83804706934799.d0/73729989933144.d0
       beh(7) =-7187797232039.d0/9610402613700.d0
       beh(8) = 1037137674282.d0/7210157936303.d0
c
       ae(2,1) = 29.d0/100.d0
       ae(3,1) = 944910679331.d0/7524750828578.d0
       ae(3,2) = 660853995437.d0/11339497413130.d0
       ae(4,1) = 509631863082.d0/7334047044281.d0
       ae(4,2) =-423852281223.d0/36695957631671.d0
       ae(4,3) = 2159695824057.d0/10688288764756.d0
       ae(5,1) = 1091812657312.d0/9011200938767.d0
       ae(5,2) =-623114690481.d0/11893950534254.d0
       ae(5,3) =-3082888051722.d0/19443362104367.d0
       ae(5,4) = 4978515657932.d0/9765915476807.d0
       ae(6,1) = 4547126963317.d0/6560940032712.d0
       ae(6,2) =-385362745163.d0/13498401602053.d0
       ae(6,3) =-24543405932731.d0/10974619092076.d0
       ae(6,4) = 20593359617779.d0/12390313899757.d0
       ae(6,5) = 8628347565424.d0/12599544848413.d0
       ae(7,1) = 14357806072214.d0/10684139112639.d0
       ae(7,2) =-802163127697.d0/10565323507454.d0
       ae(7,3) =-35559024563286.d0/7249521099295.d0
       ae(7,4) = 21360134143475.d0/5842784726872.d0
       ae(7,5) = 11789728811839.d0/13458224341839.d0
       ae(7,6) =-1151257795715.d0/17782804420424.d0
       ae(8,1) = 19213072935629.d0/10556544751558.d0
       ae(8,2) =-1295131377774.d0/8617447887625.d0
       ae(8,3) =-98143927937341.d0/11550251865673.d0
       ae(8,4) = 41081102316668.d0/4946040362651.d0
       ae(8,5) =-9534447842713.d0/9261965977413.d0
       ae(8,6) = 12149701873097.d0/8494876123974.d0
       ae(8,7) =-163220060.d0/185630247.d0
c
       ai(2,1) = 29.d0/200.d0
       ai(2,2) = 29.d0/200.d0
       ai(3,1) = 29.d0/400.d0
       ai(3,2) =-350623571328.d0/10420535143571.d0
       ai(3,3) = 29.d0/200.d0
       ai(4,1) = 1111986705956.d0/14689168660687.d0
       ai(4,2) =-904473418719.d0/8629729809085.d0
       ai(4,3) = 954520894285.d0/6623655325599.d0
       ai(4,4) = 29.d0/200.d0
       ai(5,1) =-157774403875.d0/3518577730158.d0
       ai(5,2) = 7612982761547.d0/10587673813068.d0
       ai(5,3) = 13841121073645.d0/13611883579348.d0
       ai(5,4) =-18647101228532.d0/13168460181677.d0
       ai(5,5) = 29.d0/200.d0
       ai(6,1) = 15376121894423.d0/24452982487353.d0
       ai(6,2) = 7386970337297.d0/11426891168911.d0
       ai(6,3) =-28984914606905.d0/9131987996606.d0
       ai(6,4) = 32126931426061.d0/10752497458871.d0
       ai(6,5) =-6347018151547.d0/13824378999203.d0
       ai(6,6) = 29.d0/200.d0
       ai(7,1) = 5313192856818.d0/5849638822399.d0
       ai(7,2) = 6806275576862.d0/7794380447801.d0
       ai(7,3) =-23562361586153.d0/4916627018031.d0
       ai(7,4) = 37197837895351.d0/8416609697259.d0
       ai(7,5) =-7446301224025.d0/10022694033942.d0
       ai(7,6) = 193129390225.d0/10043276696821.d0
       ai(7,7) = 29.d0/200.d0
       ai(8,1) = 29346697.d0/421457400.d0
       ai(8,2) = 0.d0
       ai(8,3) = 0.d0
       ai(8,4) = 3259595.d0/7327008.d0
       ai(8,5) =-276035.d0/5868576.d0
       ai(8,6) = 42549344.d0/37405995.d0
       ai(8,7) =-4800590.d0/6401043.d0
       ai(8,8) = 29.d0/200.d0
c
c Third-order dense output -> b_{i}^{*} = sum_{j=1}^{p*} b_{ij}^{*}\theta^{j}
c
       pstar = 3
c
       if( pstar .eq. 3) then
        bd(1,1) = 12820459003846.d0/17191194337391.d0
        bd(2,1) = 0.d0
        bd(3,1) = 0.d0
        bd(4,1) = 21745106175311.d0/27540522034773.d0
        bd(5,1) =-1206540221281.d0/2527430317866.d0
        bd(6,1) =-9653705088004.d0/14058496480195.d0
        bd(7,1) = 104317199084875.d0/174985269190169.d0
        bd(8,1) = 180606586521.d0/5542466477420.d0
        bd(1,2) =-21226856499961.d0/13294756535964.d0
        bd(2,2) = 0.d0
        bd(3,2) = 0.d0
        bd(4,2) =-1331573906248.d0/11350850346435.d0
        bd(5,2) = 22097783605857.d0/12021399857206.d0
        bd(6,2) = 22780640821109.d0/12494549450994.d0
        bd(7,2) =-15900503220980.d0/9227274696127.d0
        bd(8,2) =-1680513556277.d0/7492290105613.d0
        bd(1,3) = 25762667339611.d0/27987449562350.d0
        bd(2,3) = 0.d0
        bd(3,3) = 0.d0
        bd(4,3) =-2019561824941.d0/8881753461765.d0
        bd(5,3) =-8679409852591.d0/6164958974684.d0
        bd(6,3) = 5848922906.d0/6251731243153.d0
        bd(7,3) = 2648031939017.d0/7022309852393.d0
        bd(8,3) = 707959005579.d0/2102558599634.d0
c
        zero = 0.d0
        do i = 1, ns
         bdsum(i) = 0.d0
         do j = 1, pstar
          bdsum(i) = bdsum(i) + bd(i,j)
         enddo
         bdsum(i) = abs( bdsum(i) - be(i))
         zero = zero + bdsum(i)**2
        enddo
        if( sqrt(zero) .gt. 1.0d-10 ) then
         print*,' Case 28, p*=3 is inconsistent '
        endif
       endif
c
       do i=1,ns
         bi(i)  = be(i)
         bih(i) = beh(i)
       enddo
c
      elseif(icase.eq.29) then
       print*,'ARK5(3)8L[2]SAb - C(3)E + C(3)I + D(1)E'
c
       ns = 8
c
       be(1) = 504799.d0/7945800.d0
       be(2) = 0.d0
       be(3) = 0.d0
       be(4) = 7997440.d0/16879827.d0
       be(5) =-63101.d0/657720.d0
       be(6) = 1380505.d0/1243512.d0
       be(7) =-609920.d0/875637.d0
       be(8) = 29.d0/200.d0
c 1/24.0, 1/120.5, p7h/q7 = 1/10, p71h/q7 = 0.146956 zns
       beh(1) = 1081110596732.d0/14649478754471.d0
       beh(2) = 0.d0
       beh(3) =-666628933744.d0/11192276217013.d0
       beh(4) = 4505251956022.d0/8423746625481.d0
       beh(5) =-769947916104.d0/7084006074529.d0
       beh(6) = 9397156797497.d0/8452485515709.d0
       beh(7) =-10279571021417.d0/14773717431766.d0
       beh(8) = 1764026733564.d0/12278983013527.d0
c
       ae(2,1) = 29.d0/100.d0
       ae(3,1) = 944910679331.d0/7524750828578.d0
       ae(3,2) = 660853995437.d0/11339497413130.d0
       ae(4,1) = 533581112233.d0/7653995188803.d0
       ae(4,2) =-170031370472.d0/11621269931129.d0
       ae(4,3) = 1348757264353.d0/6746542576822.d0
       ae(5,1) = 1950234588517.d0/17662699739506.d0
       ae(5,2) =-332883406376.d0/6231822983023.d0
       ae(5,3) =-1501622803130.d0/13312099490901.d0
       ae(5,4) = 3544193519747.d0/7775719960944.d0
       ae(6,1) = 4415692059755.d0/6184565939008.d0
       ae(6,2) =-181434895415.d0/3951623387802.d0
       ae(6,3) =-9838398704716.d0/3948073388565.d0
       ae(6,4) = 14467539733933.d0/7676224424228.d0
       ae(6,5) = 4767418907531.d0/6818812598026.d0
       ae(7,1) = 13664674826445.d0/9338234107021.d0
       ae(7,2) =-1148392187228.d0/10052707690761.d0
       ae(7,3) =-47726509437276.d0/8289873782681.d0
       ae(7,4) = 11098640290244.d0/2530984076703.d0
       ae(7,5) = 10017894922085.d0/10892321086738.d0
       ae(7,6) =-975330332500.d0/12717729394599.d0
       ae(8,1) = 20605001118052.d0/11160401878853.d0
       ae(8,2) =-864172130005.d0/4676995280886.d0
       ae(8,3) =-48076757328113.d0/5166815951174.d0
       ae(8,4) = 59783560391876.d0/6379753472875.d0
       ae(8,5) =-8976653957902.d0/6740023859337.d0
       ae(8,6) = 4599149537905.d0/3130560685319.d0
       ae(8,7) =-2439680.d0/2821497.d0
c
       ai(2,1) = 29.d0/200.d0
       ai(2,2) = 29.d0/200.d0
       ai(3,1) = 29.d0/400.d0
       ai(3,2) =-350623571328.d0/10420535143571.d0
       ai(3,3) = 29.d0/200.d0
       ai(4,1) = 563162971637.d0/7363059401713.d0
       ai(4,2) =-1872594364127.d0/18709023266510.d0
       ai(4,3) = 1604773798374.d0/12011283225215.d0
       ai(4,4) = 29.d0/200.d0
       ai(5,1) =-235876482762.d0/7418877488651.d0
       ai(5,2) = 2017250475914.d0/3894862148351.d0
       ai(5,3) = 9689825215885.d0/9953891139087.d0
       ai(5,4) =-11931582904601.d0/9904991699437.d0
       ai(5,5) = 29.d0/200.d0
       ai(6,1) = 7736165343929.d0/13216197308338.d0
       ai(6,2) = 8250923805693.d0/11530905621695.d0
       ai(6,3) =-36757624658439.d0/11623663237490.d0
       ai(6,4) = 4747444312927.d0/1571381876433.d0
       ai(6,5) =-4070476269760.d0/7471720162697.d0
       ai(6,6) = 29.d0/200.d0
       ai(7,1) = 35849337335833.d0/40289102296178.d0
       ai(7,2) = 10416473479187.d0/10405676575006.d0
       ai(7,3) =-34380596829120.d0/6763366027991.d0
       ai(7,4) = 42119330086142.d0/8806580857569.d0
       ai(7,5) =-8847201373733.d0/9435776165374.d0
       ai(7,6) = 8400245189.d0/374539673600.d0
       ai(7,7) = 29.d0/200.d0
       ai(8,1) = 504799.d0/7945800.d0
       ai(8,2) = 0.d0
       ai(8,3) = 0.d0
       ai(8,4) = 7997440.d0/16879827.d0
       ai(8,5) =-63101.d0/657720.d0
       ai(8,6) = 1380505.d0/1243512.d0
       ai(8,7) =-609920.d0/875637.d0
       ai(8,8) = 29.d0/200.d0
c
c Third-order dense output -> b_{i}^{*} = sum_{j=1}^{p*} b_{ij}^{*}\theta^{j}
c
       if( pstar .eq. 3) then
        bd(1,1) = 3270256063429.d0/4551400007419.d0
        bd(2,1) = 0.d0
        bd(3,1) = 0.d0
        bd(4,1) = 12418986321311.d0/13407172233845.d0
        bd(5,1) =-5345662051616.d0/8952987432725.d0
        bd(6,1) =-6693434592959.d0/11182341653767.d0
        bd(7,1) = 4939644058563.d0/9529824651286.d0
        bd(8,1) = 42765797702.d0/1315579348647.d0
        bd(1,2) =-13160789566549.d0/8682685895005.d0
        bd(2,2) = 0.d0
        bd(3,2) = 0.d0
        bd(4,2) =-21301904847952.d0/31801396681381.d0
        bd(5,2) = 21014723821261.d0/8939469149055.d0
        bd(6,2) = 11293733063138.d0/7236854481025.d0
        bd(7,2) =-52400186744003.d0/34904318469145.d0
        bd(8,2) =-3677476037671.d0/16379228506535.d0
        bd(1,3) = 10222820643756.d0/11876439701407.d0
        bd(2,3) = 0.d0
        bd(3,3) = 0.d0
        bd(4,3) = 10729388396561.d0/49368105835260.d0
        bd(5,3) =-17722062895191.d0/9581371084624.d0
        bd(6,3) = 1924138470461.d0/12987585909615.d0
        bd(7,3) = 5156393757916.d0/18005887185411.d0
        bd(8,3) = 1137825688555.d0/3376201966239.d0
c
        zero = 0.d0
        do i = 1, ns
         bdsum(i) = 0.d0
         do j = 1, pstar
          bdsum(i) = bdsum(i) + bd(i,j)
         enddo
         bdsum(i) = abs( bdsum(i) - be(i))
         zero = zero + bdsum(i)**2
        enddo
        if( sqrt(zero) .gt. 1.0d-10 ) then
         print*,' Case 29, p*=3 is inconsistent '
        endif
       endif
c
       do i=1,ns
         bi(i)  = be(i)
         bih(i) = beh(i)
       enddo
c
      elseif(icase.eq.30) then
       print*,'ARK4(3)6L[2]SAk -> C^{[I]}(2) '
c
       ns = 6
c
       be(1) = 21877.d0/127575.d0
       be(2) = 2408.d0/25575.d0
       be(3) = 655.d0/12243.d0
       be(4) = 2899.d0/3780.d0
       be(5) =-2817680.d0/8384229.d0
       be(6) = 1.d0/4.d0
c
       beh(1) = +1018184339409.d0/6103608029212.d0
       beh(2) = +1504990829005.d0/12773952068249.d0
       beh(3) = +729296998816.d0/13659700050567.d0
       beh(4) = +4143514618339.d0/5389830332318.d0
       beh(5) = -1388079727725.d0/3679720585558.d0
       beh(6) = +2835999967.d0/10486826368.d0
c
       ae(2,1) = 1.d0/2.d0
       ae(3,1) = 66032673.d0/390855350.d0
       ae(3,2) = 1736273.d0/15634214.d0
       ae(4,1) =-1760708647086.d0/33397118149543.d0
       ae(4,2) =-170068996036.d0/3665672766425.d0
       ae(4,3) = 8708084380024.d0/12455861083951.d0
       ae(5,1) =-5405385844267.d0/10327010231606.d0
       ae(5,2) =-4096786035815.d0/8659160943377.d0
       ae(5,3) = 25168858502878.d0/12635893129119.d0
       ae(5,4) =-12391567882089.d0/66867098270782.d0
       ae(6,1) = 656568994360.d0/7557094224589.d0
       ae(6,2) =-529181894116.d0/2576226868051.d0
       ae(6,3) = 2397973103563.d0/12964939240330.d0
       ae(6,4) = 16240508027014.d0/11460703885745.d0
       ae(6,5) =-87034628759109.d0/180013281911477.d0
c
       ai(2,1) = 1.d0/4.d0
       ai(2,2) = 1.d0/4.d0
       ai(3,1) = 229.d0/2500.d0
       ai(3,2) =-77.d0/1250.d0
       ai(3,3) = 1.d0/4.d0
       ai(4,1) = 757.d0/4550.d0
       ai(4,2) =-348.d0/3575.d0
       ai(4,3) = 1125.d0/4004.d0
       ai(4,4) = 1.d0/4.d0
       ai(5,1) = 3381103339.d0/19723760000.d0
       ai(5,2) =-3194652393.d0/7748620000.d0
       ai(5,3) = 1291570515.d0/2777105408.d0
       ai(5,4) = 12110553.d0/36066304.d0
       ai(5,5) = 1.d0/4.d0
       ai(6,1) = 21877.d0/127575.d0
       ai(6,2) = 2408.d0/25575.d0
       ai(6,3) = 655.d0/12243.d0
       ai(6,4) = 2899.d0/3780.d0
       ai(6,5) =-2817680.d0/8384229.d0
       ai(6,6) = 1.d0/4.d0
c
       do i=1,ns
         bi(i)  = be(i)
         bih(i) = beh(i)
       enddo
c
      elseif(icase.eq.31) then
       print*,'ARK4(2)5L[2]SAa -> C^{[I]}(2) '
c
       ns = 5
c
       be(1) = 2422572624444.d0/14776350078079.d0
       be(2) =-879223916953.d0/12529800621269.d0
       be(3) = 8676066033063.d0/12628454829374.d0
       be(4) =-6719389352869.d0/19001727946527.d0
       be(5) = 3191511216501.d0/5571616135678.d0
c
       beh(1) = +1578213945953.d0/9627669671448.d0
       beh(2) = -636652630267.d0/8920397269095.d0
       beh(3) = +7446799783109.d0/11046548115551.d0
       beh(4) = -844111671027.d0/3707707634362.d0
       beh(5) = +5516763591217.d0/11967454594964.d0
c
       ae(2,1) = 16888455429931.d0/14741604274110.d0
       ae(3,1) = 2743847785840.d0/7193462848237.d0
       ae(3,2) = 1705767276557.d0/14386925696474.d0
       ae(4,1) = 4995562050873.d0/12188897240122.d0
       ae(4,2) = 269573440933.d0/14145547167788.d0
       ae(4,3) = 5396651353530.d0/10356316037977.d0
       ae(5,1) = 2260888845943.d0/10180420620596.d0
       ae(5,2) =-698833748070.d0/6206426755663.d0
       ae(5,3) = 4860054520463.d0/5274737891672.d0
       ae(5,4) =-128108445915.d0/4150364455979.d0
c
       ai(2,1) = 3191511216501.d0/5571616135678.d0
       ai(2,2) = 3191511216501.d0/5571616135678.d0
       ai(3,1) = 394182344041.d0/5790508922071.d0
       ai(3,2) =-1161612281275.d0/8244821127854.d0
       ai(3,3) = 3191511216501.d0/5571616135678.d0
       ai(4,1) =-3256529147839.d0/25237757162524.d0
       ai(4,2) =-6983986572851.d0/13030751366919.d0
       ai(4,3) = 9094901219063.d0/8726805631744.d0
       ai(4,4) = 3191511216501.d0/5571616135678.d0
       ai(5,1) = 2422572624444.d0/14776350078079.d0
       ai(5,2) =-879223916953.d0/12529800621269.d0
       ai(5,3) = 8676066033063.d0/12628454829374.d0
       ai(5,4) =-6719389352869.d0/19001727946527.d0
       ai(5,5) = 3191511216501.d0/5571616135678.d0
c
       do i=1,ns
         bi(i)  = be(i)
         bih(i) = beh(i)
       enddo
c
      elseif(icase.eq.32) then
       print*,'ARK5(4)8L[2]SAc - C(2)E + D(1)E + C(3)I'
c
       ns = 8
c
       be(1) = -118421635481.d0/8044078827206.d0
       be(2) = 0.d0
       be(3) = 0.d0
       be(4) = 9014252665684.d0/19854287750789.d0
       be(5) =-4589120060672.d0/13120355769277.d0
       be(6) =-1995457633941.d0/8675393382242.d0
       be(7) = 5973465567681.d0/6171026969248.d0
       be(8) = 69.d0/400.d0
c 
       beh(1) =-144305149455.d0/18714839654377.d0
       beh(2) = 0.d0
       beh(3) = 0.d0
       beh(4) = 5362347756268.d0/12364252969837.d0
       beh(5) =-2830471631465.d0/10627505764482.d0
       beh(6) =-1513091711395.d0/8531496198628.d0
       beh(7) = 2891183254533.d0/3364413443248.d0
       beh(8) = 2105860006678.d0/13298033236913.d0
c
       ae(2,1) = 69.d0/200.d0
       ae(3,1) = 2433800830323.d0/16291658719315.d0
       ae(3,2) = 817101744388.d0/11785372850277.d0
       ae(4,1) = 654583235691.d0/6343915991473.d0
       ae(4,2) = 0.d0
       ae(4,3) = 197850243819.d0/3113126532323.d0
       ae(5,1) = 2075652963076.d0/6435542821783.d0
       ae(5,2) = 0.d0
       ae(5,3) = 8263829442203.d0/4200401380854.d0
       ae(5,4) =-81148846831744.d0/45848878192509.d0
       ae(6,1) =-4621090232479.d0/15954301571529.d0
       ae(6,2) = 0.d0
       ae(6,3) =-27911318274023.d0/7864501035446.d0
       ae(6,4) = 9701872910403.d0/2635158917072.d0
       ae(6,5) = 9845840820376.d0/9777707764035.d0
       ae(7,1) = 880068427949.d0/10975014629334.d0
       ae(7,2) = 0.d0
       ae(7,3) = 2390871186863.d0/3147152239689.d0
       ae(7,4) =-3095429111729.d0/8023085664828.d0
       ae(7,5) = 203386367669.d0/1174922384927.d0
       ae(7,6) = 560474438318.d0/24552937009035.d0
       ae(8,1) =-17223558123822.d0/31946665507787.d0
       ae(8,2) = 0.d0
       ae(8,3) =-81679574644098.d0/15788315509537.d0
       ae(8,4) = 34897767181677.d0/6145496444140.d0
       ae(8,5) =-986944576835.d0/1639551261006.d0
       ae(8,6) =-3116167534751.d0/9497419944968.d0
       ae(8,7) = 60157868943463.d0/30629829409137.d0
c
       ai(2,1) = 69.d0/400.d0
       ai(2,2) = 69.d0/400.d0
       ai(3,1) = 69.d0/800.d0
       ai(3,2) =-417445439273.d0/10428636669513.d0
       ai(3,3) = 69.d0/400.d0
       ai(4,1) = 1010260175639.d0/16246388828425.d0
       ai(4,2) = 0.d0
       ai(4,3) =-951133754122.d0/13998111552313.d0
       ai(4,4) = 69.d0/400.d0
       ai(5,1) =-842066756035.d0/6618231641148.d0
       ai(5,2) = 0.d0
       ai(5,3) =-4981970259472.d0/7695235309359.d0
       ai(5,4) = 13728076340097.d0/12233790523063.d0
       ai(5,5) = 69.d0/400.d0
       ai(6,1) = 20358667849313.d0/9932681443313.d0
       ai(6,2) = 0.d0
       ai(6,3) = 104280239491377.d0/8767400122327.d0
       ai(6,4) =-202991850035575.d0/15894546904703.d0
       ai(6,5) =-6321104308269.d0/12767559693607.d0
       ai(6,6) = 69.d0/400.d0
       ai(7,1) = 3466727785757.d0/8153283100870.d0
       ai(7,2) = 0.d0
       ai(7,3) = 22762661162595.d0/8674073744158.d0
       ai(7,4) =-11142537523733.d0/4534462587835.d0
       ai(7,5) =-714251802482.d0/7298653787545.d0
       ai(7,6) =-593011173831.d0/35401882700350.d0
       ai(7,7) = 69.d0/400.d0
       ai(8,1) =-118421635481.d0/8044078827206.d0
       ai(8,2) = 0.d0
       ai(8,3) = 0.d0
       ai(8,4) = 9014252665684.d0/19854287750789.d0
       ai(8,5) =-4589120060672.d0/13120355769277.d0
       ai(8,6) =-1995457633941.d0/8675393382242.d0
       ai(8,7) = 5973465567681.d0/6171026969248.d0
       ai(8,8) = 69.d0/400.d0
c
c Third-order dense output -> b_{i}^{*} = sum_{j=1}^{p*} b_{ij}^{*}\theta^{j}
c
       pstar = 3
c
       if( pstar .eq. 3) then
        bd(1,1) = 10211618744485.d0/7077688045219.d0
        bd(2,1) = 0.d0
        bd(3,1) = 0.d0
        bd(4,1) =-5372819529977.d0/3835388806256.d0
        bd(5,1) =+143736219056083.d0/22081904347480.d0
        bd(6,1) = 36939455552963.d0/8532012268067.d0
        bd(7,1) =-44169888678943.d0/5069727266440.d0
        bd(8,1) =-2891499137567.d0/2475170963050.d0
        bd(1,2) =-31523170564969.d0/6999303543314.d0
        bd(2,2) = 0.d0
        bd(3,2) = 0.d0
        bd(4,2) = 65349607891531.d0/8881076083616.d0
        bd(5,2) =-380493989255271.d0/18442384535242.d0
        bd(6,2) =-184846724031049.d0/12994054628139.d0
        bd(7,2) = 279639418385597.d0/9876966897709.d0
        bd(8,2) = 48861012671773.d0/13240877736552.d0
        bd(1,3) = 25695332172776.d0/8435079987063.d0
        bd(2,3) = 0.d0
        bd(3,3) = 0.d0
        bd(4,3) =-13617142406007.d0/2474303706307.d0
        bd(5,3) = 223528590503489.d0/16230073284881.d0
        bd(6,3) = 44507615241688.d0/4604573437497.d0
        bd(7,3) =-73641589139317.d0/3952465098177.d0
        bd(8,3) =-20532194916285.d0/8739103465999.d0
c
        zero = 0.d0
        do i = 1, ns
         bdsum(i) = 0.d0
         do j = 1, pstar
          bdsum(i) = bdsum(i) + bd(i,j)
         enddo
         bdsum(i) = abs( bdsum(i) - be(i))
         zero = zero + bdsum(i)**2
        enddo
        if( sqrt(zero) .gt. 1.0d-10 ) then
         print*,' Case 28, p*=3 is inconsistent '
        endif
       endif
c
       do i=1,ns
         bi(i)  = be(i)
         bih(i) = beh(i)
       enddo
 

      elseif(icase.eq.33) then
       print*,'ARK4( )6L[2]SAo'
c
       ns = 6
c
       be(1) = 2129.d0/12852.d0
       be(2) = 0.d0
       be(3) = 47.d0/108.d0
       be(4) = 61.d0/126.d0
       be(5) =-205.d0/612.d0
       be(6) = 1.d0/4.d0
c
       ae(2,1) = 1.d0/2.d0
       ae(3,1) = 99.d0/400.d0
       ae(3,2) = 81.d0/400.d0
       ae(4,1) = 1494659540817.d0/5246628178808.d0
       ae(4,2) = 6511205583185.d0/5594202843233.d0
       ae(4,3) =-6517647897263.d0/8704121462832.d0
       ae(5,1) = 2802140237119.d0/8937249390802.d0
       ae(5,2) =-2848824817918.d0/14967288028399.d0
       ae(5,3) = 5585304689781.d0/26676531738401.d0
       ae(5,4) = 6228079540441.d0/12036557520846.d0
       ae(6,1) = 321352155630.d0/9075090454307.d0
       ae(6,2) =-27480077164418.d0/9603492538777.d0
       ae(6,3) = 31215082721327.d0/10156010412921.d0
       ae(6,4) = 4046284172916.d0/6597802914443.d0
       ae(6,5) = 801094058291.d0/5754094093551.d0
c
       ai(2,1) = 1.d0/4.d0
       ai(2,2) = 1.d0/4.d0
       ai(3,1) = 89.d0/400.d0
       ai(3,2) =-9.d0/400.d0
       ai(3,3) = 1.d0/4.d0
       ai(4,1) = 1171.d0/6600.d0
       ai(4,2) =-2317.d0/2200.d0
       ai(4,3) = 175.d0/132.d0
       ai(4,4) = 1.d0/4.d0
       ai(5,1) = 779131.d0/3788400.d0
       ai(5,2) =-279871.d0/180400.d0
       ai(5,3) = 23681.d0/13530.d0
       ai(5,4) = 561.d0/2870.d0
       ai(5,5) = 1.d0/4.d0
       ai(6,1) = 2129.d0/12852.d0
       ai(6,2) = 0.d0
       ai(6,3) = 47.d0/108.d0
       ai(6,4) = 61.d0/126.d0
       ai(6,5) =-205.d0/612.d0
       ai(6,6) = 1.d0/4.d0
c
       do i=1,ns
         bi(i)  = be(i)
         bih(i) = beh(i)
       enddo

      elseif(icase.eq.35) then
       print*,'ARK5(4)8L[2]SAb - C(2)E + D(1)E + C(3)I'
c
       ns = 8
c
       be(1) = 202445856095.d0/10237130922204.d0
       be(2) = 0.d0
       be(3) = 0.d0
       be(4) = 3344137367878.d0/8728298250969.d0
       be(5) = 900962597882.d0/2456217085129.d0
       be(6) = 7343210251967.d0/22464435330094.d0
       be(7) =-2602334788831.d0/9241126193663.d0
       be(8) = 37.d0/200.d0
c
       beh(1) = 273954041049.d0/15302352082591.d0
       beh(2) = 0.d0
       beh(3) = 0.d0
       beh(4) = 1799391204235.d0/4650445140619.d0
       beh(5) = 2794040487496.d0/7691094786953.d0
       beh(6) = 1117919587856.d0/3556599431793.d0
       beh(7) =-2082966250363.d0/8119193233140.d0
       beh(8) = 1093015837244.d0/6277669189753.d0
c
       ae(2,1) = 37.d0/100.d0
       ae(3,1) = 2474703938564.d0/15446172811833.d0
       ae(3,2) = 795007692349.d0/10691924685602.d0
       ae(4,1) = 975635017523.d0/8816521995904.d0
       ae(4,2) = 0.d0
       ae(4,3) = 704472176841.d0/10335735797791.d0
       ae(5,1) = 8338683862397.d0/12405835762753.d0
       ae(5,2) = 0.d0
       ae(5,3) = 29851348683095.d0/7733147708749.d0
       ae(5,4) =-17507705121601.d0/4509576582340.d0
       ae(6,1) =-9316092282216.d0/13282003565585.d0
       ae(6,2) = 0.d0
       ae(6,3) =-39052016582642.d0/11514625021587.d0
       ae(6,4) = 151060521931337.d0/34470740066494.d0
       ae(6,5) = 4742787241042.d0/9287945143189.d0
       ae(7,1) = 12008395112447.d0/10642630386097.d0
       ae(7,2) = 0.d0
       ae(7,3) = 101529409601273.d0/18301783768978.d0
       ae(7,4) =-17820874099943.d0/2957407118514.d0
       ae(7,5) = 1.d0/8.d0
       ae(7,6) = 1.d0/8.d0
       ae(8,1) = 23582493035621.d0/15702262170538.d0
       ae(8,2) = 0.d0
       ae(8,3) = 64595942214869.d0/9725450579555.d0
       ae(8,4) =-67749459140173.d0/9012573847560.d0
       ae(8,5) =-116447689157.d0/6459850240474.d0
       ae(8,6) = 4998415685071.d0/9194040327877.d0
       ae(8,7) =-1231585979165.d0/8090925416751.d0
c
       ai(2,1) = 37.d0/200.d0
       ai(2,2) = 37.d0/200.d0
       ai(3,1) = 37.d0/400.d0
       ai(3,2) =-963719735533.d0/22448945221618.d0
       ai(3,3) = 37.d0/200.d0
       ai(4,1) = 617061853454.d0/9252725537411.d0
       ai(4,2) = 0.d0
       ai(4,3) =-415818480919.d0/5706226604988.d0
       ai(4,4) = 37.d0/200.d0
       ai(5,1) =-1081786115594.d0/9584053688191.d0
       ai(5,2) = 0.d0
       ai(5,3) =-1793850232401.d0/8108117403368.d0
       ai(5,4) = 2174629064055.d0/2721297377368.d0
       ai(5,5) = 37.d0/200.d0
       ai(6,1) = 11008361818105.d0/6680537287706.d0
       ai(6,2) = 0.d0
       ai(6,3) = 165081040462541.d0/18177603910749.d0
       ai(6,4) =-65223229020500.d0/6657582278881.d0
       ai(6,5) =-4279480657902.d0/13476390456703.d0
       ai(6,6) = 37.d0/200.d0
       ai(7,1) = 9099483873008.d0/5122231638755.d0
       ai(7,2) = 0.d0
       ai(7,3) = 63922217344449.d0/6295012144832.d0
       ai(7,4) =-112639872206269.d0/10335351578512.d0
       ai(7,5) =-667335702772.d0/1686960927451.d0
       ai(7,6) = 1633443253777.d0/20888851688314.d0
       ai(7,7) = 37.d0/200.d0
       ai(8,1) = 202445856095.d0/10237130922204.d0
       ai(8,2) = 0.d0
       ai(8,3) = 0.d0
       ai(8,4) = 3344137367878.d0/8728298250969.d0
       ai(8,5) = 900962597882.d0/2456217085129.d0
       ai(8,6) = 7343210251967.d0/22464435330094.d0
       ai(8,7) =-2602334788831.d0/9241126193663.d0
       ai(8,8) = 37.d0/200.d0
c
c Third-order dense output -> b_{i}^{*} = sum_{j=1}^{p*} b_{ij}^{*}\theta^{j}
c
       pstar = 3
c
       if( pstar .eq. 3) then
        bd(1,1) = 1.d0/1.d0
        bd(2,1) = 0.d0
        bd(3,1) = 0.d0
        bd(4,1) =-1.d0/1.d0
        bd(5,1) =+1.d0/1.d0
        bd(6,1) = 1.d0/1.d0
        bd(7,1) =-1.d0/1.d0
        bd(8,1) =-1.d0/1.d0
        bd(1,2) =-1.d0/1.d0
        bd(2,2) = 0.d0
        bd(3,2) = 0.d0
        bd(4,2) = 1.d0/1.d0
        bd(5,2) =-1.d0/1.d0
        bd(6,2) =-1.d0/1.d0
        bd(7,2) = 1.d0/1.d0
        bd(8,2) = 1.d0/1.d0
        bd(1,3) = 1.d0/1.d0
        bd(2,3) = 0.d0
        bd(3,3) = 0.d0
        bd(4,3) =-1.d0/1.d0
        bd(5,3) = 1.d0/1.d0
        bd(6,3) = 1.d0/1.d0
        bd(7,3) =-1.d0/1.d0
        bd(8,3) =-1.d0/1.d0
c
        zero = 0.d0
        do i = 1, ns
         bdsum(i) = 0.d0
         do j = 1, pstar
          bdsum(i) = bdsum(i) + bd(i,j)
         enddo
         bdsum(i) = abs( bdsum(i) - be(i))
         zero = zero + bdsum(i)**2
        enddo
        if( sqrt(zero) .gt. 1.0d-10 ) then
         print*,' Case 28, p*=3 is inconsistent '
        endif
       endif
c
       do i=1,ns
         bi(i)  = be(i)
         bih(i) = beh(i)
       enddo
c
      elseif(icase.eq.36) then
       print*,'ARK5(4)8L[2]SAc - C(2)E + D(1)E + C(3)I'
c
       ns = 8
c
       be(1) = -1379272400451.d0/19818271468024.d0
       be(2) = 0.d0
       be(3) = 0.d0
       be(4) = 12117952087139.d0/10233657682757.d0
       be(5) =-1398834712582.d0/8392014218279.d0
       be(6) =-9370208245272.d0/9305403883477.d0
       be(7) = 3443142234749.d0/4031218840255.d0
       be(8) = 41.d0/200.d0
c
       beh(1) =-449516837269.d0/6007030676763.d0
       beh(2) = 0.d0
       beh(3) = 0.d0
       beh(4) = 7990165111669.d0/6509801444755.d0
       beh(5) =-2908410461395.d0/15051169468819.d0
       beh(6) =-7015816231607.d0/6604966156905.d0
       beh(7) = 11601153699719.d0/13127073071524.d0
       beh(8) = 417521888884.d0/1905564598607.d0
c
       ae(2,1) = 41.d0/100.d0
       ae(3,1) = 367902744464.d0/2072280473677.d0
       ae(3,2) = 677623207551.d0/8224143866563.d0
       ae(4,1) = 1268023523408.d0/10340822734521.d0
       ae(4,2) = 0.d0
       ae(4,3) = 1029933939417.d0/13636558850479.d0
       ae(5,1) = 33048823174705.d0/15878338723083.d0
       ae(5,2) = 0.d0
       ae(5,3) = 145456733062531.d0/14060894765200.d0
       ae(5,4) =-112301858715771.d0/9743224912729.d0
       ae(6,1) = 7925292682791.d0/10848909229109.d0
       ae(6,2) = 0.d0
       ae(6,3) = 24019436134054.d0/8183012368847.d0
       ae(6,4) =-43023473965183.d0/13064794665170.d0
       ae(6,5) =-649744080207.d0/8935979072899.d0
       ae(7,1) = 15569278921103.d0/11042344438246.d0
       ae(7,2) = 0.d0
       ae(7,3) = 95479872568121.d0/13376963133003.d0
       ae(7,4) =-43826159120158.d0/5693486690143.d0
       ae(7,5) =-1.d0/8.d0
       ae(7,6) =-1.d0/8.d0
       ae(8,1) =-10102103121479.d0/6153729770897.d0
       ae(8,2) = 0.d0
       ae(8,3) =-97336252230556.d0/13251635756051.d0
       ae(8,4) = 58268199715179.d0/5223248809010.d0
       ae(8,5) = 618252146133.d0/7508882659958.d0
       ae(8,6) =-21122682650944.d0/7239721823043.d0
       ae(8,7) = 17608626292490.d0/10565760394463.d0
c
       ai(2,1) = 41.d0/200.d0
       ai(2,2) = 41.d0/200.d0
       ai(3,1) = 41.d0/400.d0
       ai(3,2) =-567603406766.d0/11931857230679.d0
       ai(3,3) = 41.d0/200.d0
       ai(4,1) = 683785636431.d0/9252920307686.d0
       ai(4,2) = 0.d0
       ai(4,3) =-110385047103.d0/1367015193373.d0
       ai(4,4) = 41.d0/200.d0
       ai(5,1) = 1786934121109.d0/7839926960339.d0
       ai(5,2) = 0.d0
       ai(5,3) = 37525014172660.d0/18118589709067.d0
       ai(5,4) =-18755792806370.d0/11693097679973.d0
       ai(5,5) = 41.d0/200.d0
       ai(6,1) = 1968512136371.d0/7167253029448.d0
       ai(6,2) = 0.d0
       ai(6,3) = 8376593709037.d0/14174059992974.d0
       ai(6,4) =-8862705527853.d0/11883077950535.d0
       ai(6,5) =-548678696782.d0/22116617928777.d0
       ai(6,6) = 41.d0/200.d0
       ai(7,1) = 1895901963248.d0/7709620809103.d0
       ai(7,2) = 0.d0
       ai(7,3) = 7384766984828.d0/6088683071183.d0
       ai(7,4) =-12347298463315.d0/14456370340348.d0
       ai(7,5) =-487056621291.d0/11189751232175.d0
       ai(7,6) =-1884666003580.d0/11343388286223.d0
       ai(7,7) = 41.d0/200.d0
       ai(8,1) = -1379272400451.d0/19818271468024.d0
       ai(8,2) = 0.d0
       ai(8,3) = 0.d0
       ai(8,4) = 12117952087139.d0/10233657682757.d0
       ai(8,5) =-1398834712582.d0/8392014218279.d0
       ai(8,6) =-9370208245272.d0/9305403883477.d0
       ai(8,7) = 3443142234749.d0/4031218840255.d0
       ai(8,8) = 41.d0/200.d0
c
c
c Third-order dense output -> b_{i}^{*} = sum_{j=1}^{p*} b_{ij}^{*}\theta^{j}
c
       pstar = 3
c
       if( pstar .eq. 3) then
        bd(1,1) = 1.d0/1.d0
        bd(2,1) = 0.d0
        bd(3,1) = 0.d0
        bd(4,1) =-1.d0/1.d0
        bd(5,1) =+1.d0/1.d0
        bd(6,1) = 1.d0/1.d0
        bd(7,1) =-1.d0/1.d0
        bd(8,1) =-1.d0/1.d0
        bd(1,2) =-1.d0/1.d0
        bd(2,2) = 0.d0
        bd(3,2) = 0.d0
        bd(4,2) = 1.d0/1.d0
        bd(5,2) =-1.d0/1.d0
        bd(6,2) =-1.d0/1.d0
        bd(7,2) = 1.d0/1.d0
        bd(8,2) = 1.d0/1.d0
        bd(1,3) = 1.d0/1.d0
        bd(2,3) = 0.d0
        bd(3,3) = 0.d0
        bd(4,3) =-1.d0/1.d0
        bd(5,3) = 1.d0/1.d0
        bd(6,3) = 1.d0/1.d0
        bd(7,3) =-1.d0/1.d0
        bd(8,3) =-1.d0/1.d0
c
        zero = 0.d0
        do i = 1, ns
         bdsum(i) = 0.d0
         do j = 1, pstar
          bdsum(i) = bdsum(i) + bd(i,j)
         enddo
         bdsum(i) = abs( bdsum(i) - be(i))
         zero = zero + bdsum(i)**2
        enddo
        if( sqrt(zero) .gt. 1.0d-10 ) then
         print*,' Case 28, p*=3 is inconsistent '
        endif
       endif
c
       do i=1,ns
         bi(i)  = be(i)
         bih(i) = beh(i)
       enddo
c
c
      elseif(icase.eq.37) then
       print*,'ARK5(4)8L[2]SAc - C(2)E + D(1)E + C(3)I'
c
       ns = 8
c
       be(1) =-872700587467.d0/9133579230613.d0
       be(2) = 0.d0
       be(3) = 0.d0
       be(4) = 24752842989968.d0/10584050607295.d0
       be(5) =-1143369518992.d0/8141816002931.d0
       be(6) =-13732001328083.d0/6631934148607.d0
       be(7) = 31972909776967.d0/41911059379164.d0
       be(8) = 41.d0/200.d0
c
       beh(1) =-499396509142.d0/5015181072449.d0
       beh(2) = 0.d0
       beh(3) = 0.d0
       beh(4) = 20133279629761.d0/8363904161634.d0
       beh(5) =-1088358089595.d0/6795944035243.d0
       beh(6) =-16593423551072.d0/7738615961777.d0
       beh(7) = 3913603334695.d0/5020235913586.d0
       beh(8) = 2913530855887.d0/13411993626143.d0
c
       ae(2,1) = 41.d0/100.d0
       ae(3,1) = 367902744464.d0/2072280473677.d0
       ae(3,2) = 677623207551.d0/8224143866563.d0
       ae(4,1) = 1268023523408.d0/10340822734521.d0
       ae(4,2) = 0.d0
       ae(4,3) = 1029933939417.d0/13636558850479.d0
       ae(5,1) = 29921928531207.d0/13065330778082.d0
       ae(5,2) = 0.d0
       ae(5,3) = 115140034464727.d0/10239288090423.d0
       ae(5,4) =-78522360150645.d0/6224472171947.d0
       ae(6,1) = 4175963610463.d0/10363619370981.d0
       ae(6,2) = 0.d0
       ae(6,3) = 5941611906955.d0/4388151832759.d0
       ae(6,4) =-14081064728885.d0/9477725119419.d0
       ae(6,5) =-146841095096.d0/4698013173029.d0
       ae(7,1) = 20649979511554.d0/14103843532755.d0
       ae(7,2) = 0.d0
       ae(7,3) = 46104976391489.d0/6376485181372.d0
       ae(7,4) =-68205481673867.d0/8694569480018.d0
       ae(7,5) =-1.d0/8.d0
       ae(7,6) =-1.d0/8.d0
       ae(8,1) =-22436580330729.d0/13396508891632.d0
       ae(8,2) = 0.d0
       ae(8,3) =-61519777358797.d0/9628354034130.d0
       ae(8,4) = 133952912771311.d0/9117280366678.d0
       ae(8,5) = 819112427236.d0/8652635578785.d0
       ae(8,6) =-87740800058441.d0/12167367327014.d0
       ae(8,7) = 9714094484631.d0/6525933883406.d0
c
c
       ai(2,1) = 41.d0/200.d0
       ai(2,2) = 41.d0/200.d0
       ai(3,1) = 41.d0/400.d0
       ai(3,2) =-567603406766.d0/11931857230679.d0
       ai(3,3) = 41.d0/200.d0
       ai(4,1) = 683785636431.d0/9252920307686.d0
       ai(4,2) = 0.d0
       ai(4,3) =-110385047103.d0/1367015193373.d0
       ai(4,4) = 41.d0/200.d0
       ai(5,1) = 3435385757185.d0/11481209014384.d0
       ai(5,2) = 0.d0
       ai(5,3) = 11157427131511.d0/4528506187550.d0
       ai(5,4) =-9556729888537.d0/4666283647179.d0
       ai(5,5) = 41.d0/200.d0
       ai(6,1) = 218866479029.d0/1489978393911.d0
       ai(6,2) = 0.d0
       ai(6,3) = 638256894668.d0/5436446318841.d0
       ai(6,4) =-2405872765194.d0/10851833147315.d0
       ai(6,5) =-60928119172.d0/8023461067671.d0
       ai(6,6) = 41.d0/200.d0
       ai(7,1) = 1020004230633.d0/5715676835656.d0
       ai(7,2) = 0.d0
       ai(7,3) = 27712922358947.d0/27176279295670.d0
       ai(7,4) =-1316382662167.d0/5941820308240.d0
       ai(7,5) =-211217309593.d0/5846859502534.d0
       ai(7,6) =-4710367281160.d0/8634419175717.d0
       ai(7,7) = 41.d0/200.d0
       ai(8,1) =-872700587467.d0/9133579230613.d0
       ai(8,2) = 0.d0
       ai(8,3) = 0.d0
       ai(8,4) = 24752842989968.d0/10584050607295.d0
       ai(8,5) =-1143369518992.d0/8141816002931.d0
       ai(8,6) =-13732001328083.d0/6631934148607.d0
       ai(8,7) = 31972909776967.d0/41911059379164.d0
       ai(8,8) = 41.d0/200.d0
c
c Third-order dense output -> b_{i}^{*} = sum_{j=1}^{p*} b_{ij}^{*}\theta^{j}
c
       pstar = 3
c
       if( pstar .eq. 3) then
        bd(1,1) =-17674230611817.d0/10670229744614.d0
        bd(2,1) = 0.d0
        bd(3,1) = 0.d0
        bd(4,1) =+65168852399939.d0/7868540260826.d0
        bd(5,1) =+15494834004392.d0/5936557850923.d0
        bd(6,1) =-99329723586156.d0/26959484932159.d0
        bd(7,1) =-19024464361622.d0/5461577185407.d0
        bd(8,1) =-6511271360970.d0/6095937251113.d0
c
        bd(1,2) =+43486358583215.d0/12773830924787.d0
        bd(2,2) = 0.d0
        bd(3,2) = 0.d0
        bd(4,2) =-91478233927265.d0/11067650958493.d0
        bd(5,2) =-79368583304911.d0/10890268929626.d0
        bd(6,2) =-12239297817655.d0/9152339842473.d0
        bd(7,2) =+115839755401235.d0/10719374521269.d0
        bd(8,2) =+5843115559534.d0/2180450260947.d0
c
        bd(1,3) =-9257016797708.d0/5021505065439.d0
        bd(2,3) = 0.d0
        bd(3,3) = 0.d0
        bd(4,3) =+26096422576131.d0/11239449250142.d0
        bd(5,3) =+92396832856987.d0/20362823103730.d0
        bd(6,3) =+30029262896817.d0/10175596800299.d0
        bd(7,3) =-26136350496073.d0/3983972220547.d0
        bd(8,3) =-5289405421727.d0/3760307252460.d0
c
        zero = 0.d0
        do i = 1, ns
         bdsum(i) = 0.d0
         do j = 1, pstar
          bdsum(i) = bdsum(i) + bd(i,j)
         enddo
         bdsum(i) = abs( bdsum(i) - be(i))
         zero = zero + bdsum(i)**2
        enddo
        if( sqrt(zero) .gt. 1.0d-10 ) then
         print*,' Case 28, p*=3 is inconsistent '
        endif
       endif
c
       do i=1,ns
         bi(i)  = be(i)
         bih(i) = beh(i)
       enddo
c
       elseif(icase.eq.38) then
      
c
c ARK4(3)6[2]SA_1 
c

      ns=6

      be(1) = 82889.d0/524892.d0
      be(2) = 0.d0/1.d0
      be(3) = 15625.d0/83664.d0
      be(4) = 69875.d0/102672.d0
      be(5) = -2260.d0/8211.d0
      be(6) = 1.d0/4.d0
c      ce(1) = 0.d0/1.d0
c      ce(2) = 1.d0/2.d0
c      ce(3) = 83.d0/250.d0
c      ce(4) = 31.d0/50.d0
c      ce(5) = 17.d0/20.d0
c      ce(6) = 1.d0/1.d0
      beh(1) = 4586570599.d0/29645900160.d0
      beh(2) = 0.d0/1.d0
      beh(3) = 178811875.d0/945068544.d0
      beh(4) = 814220225.d0/1159782912.d0
      beh(5) = -3700637.d0/11593932.d0
      beh(6) = 61727.d0/225920.d0
      ai(1,1) = 0.d0/1.d0
      ai(2,1) = 1.d0/4.d0
      ai(2,2) = 1.d0/4.d0
      ai(3,1) = 8611.d0/62500.d0
      ai(3,2) = -1743.d0/31250.d0
      ai(3,3) = 1.d0/4.d0
      ai(4,1) = 5012029.d0/34652500.d0
      ai(4,2) = -654441.d0/2922500.d0
      ai(4,3) = 174375.d0/388108.d0
      ai(4,4) = 1.d0/4.d0
      ai(5,1) = 15267082809.d0/155376265600.d0
      ai(5,2) = -71443401.d0/120774400.d0
      ai(5,3) = 730878875.d0/902184768.d0
      ai(5,4) = 2285395.d0/8070912.d0
      ai(5,5) = 1.d0/4.d0
      ai(6,1) = 82889.d0/524892.d0
      ai(6,2) = 0.d0/1.d0
      ai(6,3) = 15625.d0/83664.d0
      ai(6,4) = 69875.d0/102672.d0
      ai(6,5) = -2260.d0/8211.d0
      ai(6,6) = 1.d0/4.d0
      ae(2,1) = 1.d0/2.d0
      ae(3,1) = 13861.d0/62500.d0
      ae(3,2) = 6889.d0/62500.d0
      ae(4,1) = -116923316275.d0/2393684061468.d0
      ae(4,2) = -2731218467317.d0/15368042101831.d0
      ae(4,3) = 9408046702089.d0/11113171139209.d0
      ae(5,1) = -451086348788.d0/2902428689909.d0
      ae(5,2) = -2682348792572.d0/7519795681897.d0
      ae(5,3) = 12662868775082.d0/11960479115383.d0
      ae(5,4) = 3355817975965.d0/11060851509271.d0
      ae(6,1) = 647845179188.d0/3216320057751.d0
      ae(6,2) = 73281519250.d0/8382639484533.d0
      ae(6,3) = 552539513391.d0/3454668386233.d0
      ae(6,4) = 3354512671639.d0/8306763924573.d0
      ae(6,5) = 4040.d0/17871.d0
      
       elseif(icase.eq.39) then
c
c ARK4(3)6[2]SA_2 
c

      ns=6 

      be(1) = 0.d0/1.d0
      be(2) = 0.d0/1.d0
      be(3) = -1993816571402.d0/8390082908741.d0
      be(4) = 2308225818361.d0/10570492729171.d0
      be(5) = 5251832796405.d0/6826993117846.d0
      be(6) = 1.d0/4.d0
      !c(1) = 0.d0/1.d0
      !c(2) = 1.d0/2.d0
      !c(3) = 8822750406821.d0/10336495061766.d0
      !c(4) = 1043484480409.d0/25370977479879.d0
      !c(5) = 6456083330201.d0/11189417483441.d0
      !c(6) = 1.d0/1.d0
      beh(1) = 0.d0/1.d0
      beh(2) = 0.d0/1.d0
      beh(3) = -746242661999.d0/4576654534243.d0
      beh(4) = 865180190020.d0/3858200751067.d0
      beh(5) = 21159223720308.d0/28980218306467.d0
      beh(6) = 2579599020513.d0/12361312239688.d0
      ai(1,1) = 0.d0/1.d0
      ai(2,1) = 1.d0/4.d0
      ai(2,2) = 1.d0/4.d0
      ai(3,1) = 1748874742213.d0/5795261096931.d0
      ai(3,2) = 1748874742213.d0/5795261096931.d0
      ai(3,3) = 1.d0/4.d0
      ai(4,1) = -1068338828214.d0/7637721911915.d0
      ai(4,2) = -1068338828214.d0/7637721911915.d0
      ai(4,3) = 708186768771.d0/9991020186334.d0
      ai(4,4) = 1.d0/4.d0
      ai(5,1) = 863393201835.d0/6495185686982.d0
      ai(5,2) = 863393201835.d0/6495185686982.d0
      ai(5,3) = -1459018128146.d0/25344198942143.d0
      ai(5,4) = 974308124951.d0/8208643248885.d0
      ai(5,5) = 1.d0/4.d0
      ai(6,1) = 0.d0/1.d0
      ai(6,2) = 0.d0/1.d0
      ai(6,3) = -1993816571402.d0/8390082908741.d0
      ai(6,4) = 2308225818361.d0/10570492729171.d0
      ai(6,5) = 5251832796405.d0/6826993117846.d0
      ai(6,6) = 1.d0/4.d0
      ae(2,1) = 1.d0/2.d0
      ae(3,1) = 1.d0/8.d0
      ae(3,2) = 5325000922395.d0/7309005751876.d0
      ae(4,1) = 587463815992.d0/11306974487013.d0
      ae(4,2) = -40446451074.d0/1417654701977.d0
      ae(4,3) = 229873464615.d0/12984473738347.d0
      ae(5,1) = -1111867393416.d0/12000619909735.d0
      ae(5,2) = 3433437386919.d0/15788428747930.d0
      ae(5,3) = 215030598845.d0/4465219331444.d0
      ae(5,4) = 3525639334885.d0/8726618287588.d0
      ae(6,1) = 126685812659.d0/2623411629787.d0
      ae(6,2) = 126685812659.d0/2623411629787.d0
      ae(6,3) = -6472516862523.d0/23964574250995.d0
      ae(6,4) = -5048620687834.d0/92339425473437.d0
      ae(6,5) = 8896345872551.d0/7243516620705.d0

       elseif(icase.eq.40) then

c
c ARK4(3)6[2]SA_3 
c

      ns=6

      be(1) = 0.d0/1.d0
      be(2) = 0.d0/1.d0
      be(3) = -563960297749.d0/17805069112286.d0
      be(4) = 14571802201713.d0/11076818691883.d0
      be(5) = -3229612456403.d0/4056201744082.d0
      be(6) = 4820248332565.d0/9407790128511.d0
      !c(1) = 0.d0/1.d0
      !c(2) = 6226043090661.d0/6075756131929.d0
      !c(3) = 19768631193874.d0/11300668192887.d0
      !c(4) = 3568986564524.d0/8947635867275.d0
      !c(5) = 2131543181044.d0/3523378542223.d0
      !c(6) = 1.d0/1.d0
      beh(1) = 0.d0/1.d0
      beh(2) = 0.d0/1.d0
      beh(3) = 113830469894.d0/8856818539777.d0
      beh(4) = 17516656197917.d0/17389175896110.d0
      beh(5) = -1756948155014.d0/7237066717745.d0
      beh(6) = 1780692319615.d0/7999967539002.d0
      ai(1,1) = 0.d0/1.d0
      ai(2,1) = 4820248332565.d0/9407790128511.d0
      ai(2,2) = 4820248332565.d0/9407790128511.d0
      ai(3,1) = 5209157608692.d0/8422480524401.d0
      ai(3,2) = 5209157608692.d0/8422480524401.d0
      ai(3,3) = 4820248332565.d0/9407790128511.d0
      ai(4,1) = -307936129880.d0/10334297583789.d0
      ai(4,2) = -307936129880.d0/10334297583789.d0
      ai(4,3) = -533413419391.d0/9896726229115.d0
      ai(4,4) = 4820248332565.d0/9407790128511.d0
      ai(5,1) = -463246860596.d0/6274021844821.d0
      ai(5,2) = -463246860596.d0/6274021844821.d0
      ai(5,3) = -200129625314.d0/1836671796399.d0
      ai(5,4) = 3257198766173.d0/9326581147316.d0
      ai(5,5) = 4820248332565.d0/9407790128511.d0
      ai(6,1) = 0.d0/1.d0
      ai(6,2) = 0.d0/1.d0
      ai(6,3) = -563960297749.d0/17805069112286.d0
      ai(6,4) = 14571802201713.d0/11076818691883.d0
      ai(6,5) = -3229612456403.d0/4056201744082.d0
      ai(6,6) = 4820248332565.d0/9407790128511.d0
      ae(2,1) = 6226043090661.d0/6075756131929.d0
      ae(3,1) = 4117350953517.d0/16071858121675.d0
      ae(3,2) = 10643376210953.d0/7128140409557.d0
      ae(4,1) = 2403071291014.d0/7194102702109.d0
      ae(4,2) = 500929881649.d0/10713952501525.d0
      ae(4,3) = 176280238052.d0/9746561363315.d0
      ae(5,1) = 1538071119458.d0/2474389634095.d0
      ae(5,2) = 1347671205781.d0/7356190111545.d0
      ae(5,3) = 285660425867.d0/5145879453434.d0
      ae(5,4) = -2091126358632.d0/8189589427375.d0
      ae(6,1) = 3707214194170.d0/14427456736353.d0
      ae(6,2) = 3707214194170.d0/14427456736353.d0
      ae(6,3) = 540266106545.d0/8259077408698.d0
      ae(6,4) = 5250600446074.d0/8183108169889.d0
      ae(6,5) = -1823295857039.d0/8251525768023.d0

       elseif(icase.eq.41) then

c
c ARK4(3)6[2]SA_4 
c
      ns=6

      be(1) = 5.d0/27.d0
      be(2) = 0.d0/1.d0
      be(3) = 0.d0/1.d0
      be(4) = 125.d0/108.d0
      be(5) = -16.d0/27.d0
      be(6) = 1.d0/4.d0
      !c(1) = 0.d0/1.d0
      !c(2) = 1.d0/2.d0
      !c(3) = 2.d0/7.d0
      !c(4) = 3.d0/5.d0
      !c(5) = 3.d0/4.d0
      !c(6) = 1.d0/1.d0
      beh(1) = 289.d0/1512.d0
      beh(2) = 0.d0/1.d0
      beh(3) = -21.d0/440.d0
      beh(4) = 400.d0/297.d0
      beh(5) = -148.d0/189.d0
      beh(6) = 41.d0/140.d0
      ai(1,1) = 0.d0/1.d0
      ai(2,1) = 1.d0/4.d0
      ai(2,2) = 1.d0/4.d0
      ai(3,1) = 19.d0/196.d0
      ai(3,2) = -3.d0/49.d0
      ai(3,3) = 1.d0/4.d0
      ai(4,1) = 467.d0/4000.d0
      ai(4,2) = -171.d0/1000.d0
      ai(4,3) = 1617.d0/4000.d0
      ai(4,4) = 1.d0/4.d0
      ai(5,1) = 139.d0/2048.d0
      ai(5,2) = -171.d0/512.d0
      ai(5,3) = 14259.d0/22528.d0
      ai(5,4) = 375.d0/2816.d0
      ai(5,5) = 1.d0/4.d0
      ai(6,1) = 5.d0/27.d0
      ai(6,2) = 0.d0/1.d0
      ai(6,3) = 0.d0/1.d0
      ai(6,4) = 125.d0/108.d0
      ai(6,5) = -16.d0/27.d0
      ai(6,6) = 1.d0/4.d0
      ae(2,1) = 1.d0/2.d0
      ae(3,1) = 10.d0/49.d0
      ae(3,2) = 4.d0/49.d0
      ae(4,1) = 551318106339.d0/13513204053508.d0
      ae(4,2) = 703655708331.d0/7454140608835.d0
      ae(4,3) = 3359361436159.d0/7227486454639.d0
      ae(5,1) = 88376764255.d0/1905590992932.d0
      ae(5,2) = 340272207057.d0/4114163913614.d0
      ae(5,3) = 4576747428636.d0/10843401871931.d0
      ae(5,4) = 3629894260085.d0/18255520083572.d0
      ae(6,1) = 1247227715225.d0/16318456021454.d0
      ae(6,2) = -2403069988642.d0/9972063484147.d0
      ae(6,3) = 4892532851091.d0/7483081432870.d0
      ae(6,4) = -4166316519687.d0/12342528959153.d0
      ae(6,5) = 4458662801326.d0/5256029283095.d0

       elseif(icase.eq.42) then

c
c ARK4(3)6[1]SA_1 
c

      ns=6

      be(1) = 0.d0/1.d0
      be(2) = 0.d0/1.d0
      be(3) = -1993816571402.d0/8390082908741.d0
      be(4) = 2308225818361.d0/10570492729171.d0
      be(5) = 5251832796405.d0/6826993117846.d0
      be(6) = 1.d0/4.d0
      !c(1) = 0.d0/1.d0
      !c(2) = 1.d0/4.d0
      !c(3) = 8822750406821.d0/10336495061766.d0
      !c(4) = 1043484480409.d0/25370977479879.d0
      !c(5) = 6456083330201.d0/11189417483441.d0
      !c(6) = 1.d0/1.d0
      beh(1) = 0.d0/1.d0
      beh(2) = 0.d0/1.d0
      beh(3) = -92945818.d0/570030261.d0
      beh(4) = 23729400.d0/105819331.d0
      beh(5) = 36533469.d0/50037181.d0
      beh(6) = 62560398.d0/299786365.d0
      ai(1,1) = 0.d0/1.d0
      ai(2,1) = 0.d0/1.d0
      ai(2,2) = 1.d0/4.d0
      ai(3,1) = 0.d0/1.d0
      ai(3,2) = 5325000922395.d0/8822750406821.d0
      ai(3,3) = 1.d0/4.d0
      ai(4,1) = 0.d0/1.d0
      ai(4,2) = -2136677656428.d0/7637721911915.d0
      ai(4,3) = 708186768771.d0/9991020186334.d0
      ai(4,4) = 1.d0/4.d0
      ai(5,1) = 0.d0/1.d0
      ai(5,2) = 863393201835.d0/3247592843491.d0
      ai(5,3) = -1459018128146.d0/25344198942143.d0
      ai(5,4) = 974308124951.d0/8208643248885.d0
      ai(5,5) = 1.d0/4.d0
      ai(6,1) = 0.d0/1.d0
      ai(6,2) = 0.d0/1.d0
      ai(6,3) = -1993816571402.d0/8390082908741.d0
      ai(6,4) = 2308225818361.d0/10570492729171.d0
      ai(6,5) = 5251832796405.d0/6826993117846.d0
      ai(6,6) = 1.d0/4.d0
      ae(2,1) = 1.d0/4.d0
      ae(3,1) = -5325000922395.d0/8822750406821.d0
      ae(3,2) = 17723877509398.d0/12163746499735.d0
      ae(4,1) = 488797762481.d0/5817511714340.d0
      ae(4,2) = -1934994732971.d0/31178991925503.d0
      ae(4,3) = 91394301448.d0/4768037247317.d0
      ae(5,1) = -2330406408626.d0/8324241668787.d0
      ae(5,2) = 3726311015153.d0/8412606120063.d0
      ae(5,3) = 505327966416.d0/10610858169911.d0
      ae(5,4) = 2641897346269.d0/7211048318489.d0
      ae(6,1) = 0.d0/1.d0
      ae(6,2) = 705739925005.d0/9250547039012.d0
      ae(6,3) = -3007005402027.d0/10744915498175.d0
      ae(6,4) = -445365011627.d0/9408792710459.d0
      ae(6,5) = 14493695364115.d0/11586640971269.d0

       elseif(icase.eq.43) then

c
c ARK4(3)6[1]SA_2 
c

      ns=6

      be(1) = 0.d0/1.d0
      be(2) = 0.d0/1.d0
      be(3) = -1993816571402.d0/8390082908741.d0
      be(4) = 2308225818361.d0/10570492729171.d0
      be(5) = 5251832796405.d0/6826993117846.d0
      be(6) = 1.d0/4.d0
      !c(1) = 0.d0/1.d0
      !c(2) = 1.d0/4.d0
      !c(3) = 8822750406821.d0/10336495061766.d0
      !c(4) = 1043484480409.d0/25370977479879.d0
      !c(5) = 6456083330201.d0/11189417483441.d0
      !c(6) = 1.d0/1.d0
      beh(1) = 0.d0/1.d0
      beh(2) = 0.d0/1.d0
      beh(3) = -92945818.d0/570030261.d0
      beh(4) = 23729400.d0/105819331.d0
      beh(5) = 36533469.d0/50037181.d0
      beh(6) = 62560398.d0/299786365.d0
      ai(1,1) = 0.d0/1.d0
      ai(2,1) = 0.d0/1.d0
      ai(2,2) = 1.d0/4.d0
      ai(3,1) = 0.d0/1.d0
      ai(3,2) = 5325000922395.d0/8822750406821.d0
      ai(3,3) = 1.d0/4.d0
      ai(4,1) = 0.d0/1.d0
      ai(4,2) = -2136677656428.d0/7637721911915.d0
      ai(4,3) = 708186768771.d0/9991020186334.d0
      ai(4,4) = 1.d0/4.d0
      ai(5,1) = 0.d0/1.d0
      ai(5,2) = 863393201835.d0/3247592843491.d0
      ai(5,3) = -1459018128146.d0/25344198942143.d0
      ai(5,4) = 974308124951.d0/8208643248885.d0
      ai(5,5) = 1.d0/4.d0
      ai(6,1) = 0.d0/1.d0
      ai(6,2) = 0.d0/1.d0
      ai(6,3) = -1993816571402.d0/8390082908741.d0
      ai(6,4) = 2308225818361.d0/10570492729171.d0
      ai(6,5) = 5251832796405.d0/6826993117846.d0
      ai(6,6) = 1.d0/4.d0
      ae(2,1) = 1.d0/4.d0
      ae(3,1) = -5325000922395.d0/8822750406821.d0
      ae(3,2) = 17723877509398.d0/12163746499735.d0
      ae(4,1) = -1320706246394.d0/8251186866711.d0
      ae(4,2) = 3919915392581.d0/13845098598239.d0
      ae(4,3) = -669755811975.d0/8174239493717.d0
      ae(5,1) = 91780108994.d0/889674149177.d0
      ae(5,2) = 2130625172012.d0/4332059283341.d0
      ae(5,3) = 355535142968.d0/6529432098471.d0
      ae(5,4) = -254574486863.d0/3513368841596.d0
      ae(6,1) = 0.d0/1.d0
      ae(6,2) = -3049912901881.d0/8119342476732.d0
      ae(6,3) = -3247895824592.d0/10325772752785.d0
      ae(6,4) = 1626706275962.d0/7726705360761.d0
      ae(6,5) = 26836827770789.d0/18137309065654.d0

       elseif(icase.eq.44) then

c
c ARK4(3)6[1]SA_3 
c

      ns=6
     
      be(1) = 0.d0/1.d0
      be(2) = 0.d0/1.d0
      be(3) = -1993816571402.d0/8390082908741.d0
      be(4) = 2308225818361.d0/10570492729171.d0
      be(5) = 5251832796405.d0/6826993117846.d0
      be(6) = 1.d0/4.d0
      !c(1) = 0.d0/1.d0
      !c(2) = 1.d0/4.d0
      !c(3) = 8822750406821.d0/10336495061766.d0
      !c(4) = 1043484480409.d0/25370977479879.d0
      !c(5) = 6456083330201.d0/11189417483441.d0
      !c(6) = 1.d0/1.d0
      beh(1) = 0.d0/1.d0
      beh(2) = 0.d0/1.d0
      beh(3) = -92945818.d0/570030261.d0
      beh(4) = 23729400.d0/105819331.d0
      beh(5) = 36533469.d0/50037181.d0
      beh(6) = 62560398.d0/299786365.d0
      ai(1,1) = 0.d0/1.d0
      ai(2,1) = 0.d0/1.d0
      ai(2,2) = 1.d0/4.d0
      ai(3,1) = 0.d0/1.d0
      ai(3,2) = 5325000922395.d0/8822750406821.d0
      ai(3,3) = 1.d0/4.d0
      ai(4,1) = 0.d0/1.d0
      ai(4,2) = -2136677656428.d0/7637721911915.d0
      ai(4,3) = 708186768771.d0/9991020186334.d0
      ai(4,4) = 1.d0/4.d0
      ai(5,1) = 0.d0/1.d0
      ai(5,2) = 863393201835.d0/3247592843491.d0
      ai(5,3) = -1459018128146.d0/25344198942143.d0
      ai(5,4) = 974308124951.d0/8208643248885.d0
      ai(5,5) = 1.d0/4.d0
      ai(6,1) = 0.d0/1.d0
      ai(6,2) = 0.d0/1.d0
      ai(6,3) = -1993816571402.d0/8390082908741.d0
      ai(6,4) = 2308225818361.d0/10570492729171.d0
      ai(6,5) = 5251832796405.d0/6826993117846.d0
      ai(6,6) = 1.d0/4.d0
      ae(2,1) = 1.d0/4.d0
      ae(3,1) = -5325000922395.d0/8822750406821.d0
      ae(3,2) = 17723877509398.d0/12163746499735.d0
      ae(4,1) = 3407562776227.d0/5891434998784.d0
      ae(4,2) = -11386406178023.d0/14958360319525.d0
      ae(4,3) = 1711933087323.d0/7644495573287.d0
      ae(5,1) = -3274385044326.d0/7919405443507.d0
      ae(5,2) = 10265819606977.d0/9480222581948.d0
      ae(5,3) = -445904406877.d0/3605981611413.d0
      ae(5,4) = 186591251250.d0/5973862131623.d0
      ae(6,1) = 0.d0/1.d0
      ae(6,2) = -11080580027089.d0/8642260605057.d0
      ae(6,3) = 226055509901.d0/3419209016141.d0
      ae(6,4) = 7899108610982.d0/8226900766593.d0
      ae(6,5) = 15124372802359.d0/12042948172666.d0

       elseif(icase.eq.45) then

c
c Lirk4
c

      ns=6

      be(1) = 0.d0/1.d0
      be(2) = 25.d0/24.d0
      be(3) = -49.d0/48.d0
      be(4) = 125.d0/16.d0
      be(5) = -85.d0/12.d0
      be(6) = 1.d0/4.d0
      !c(1) = 0.d0/1.d0
      !c(2) = 1.d0/4.d0
      !c(3) = 3.d0/4.d0
      !c(4) = 11.d0/20.d0
      !c(5) = 1.d0/2.d0
      !c(6) = 1.d0/1.d0
      ai(1,1) = 0.d0/1.d0
      ai(2,1) = 0.d0/1.d0
      ai(2,2) = 1.d0/4.d0
      ai(3,1) = 0.d0/1.d0
      ai(3,2) = 1.d0/2.d0
      ai(3,3) = 1.d0/4.d0
      ai(4,1) = 0.d0/1.d0
      ai(4,2) = 17.d0/50.d0
      ai(4,3) = -1.d0/25.d0
      ai(4,4) = 1.d0/4.d0
      ai(5,1) = 0.d0/1.d0
      ai(5,2) = 371.d0/1360.d0
      ai(5,3) = -137.d0/2720.d0
      ai(5,4) = 15.d0/544.d0
      ai(5,5) = 1.d0/4.d0
      ai(6,1) = 0.d0/1.d0
      ai(6,2) = 25.d0/24.d0
      ai(6,3) = -49.d0/48.d0
      ai(6,4) = 125.d0/16.d0
      ai(6,5) = -85.d0/12.d0
      ai(6,6) = 1.d0/4.d0
      ae(2,1) = 1.d0/4.d0
      ae(3,1) = -1.d0/4.d0
      ae(3,2) = 1.d0/1.d0
      ae(4,1) = -13.d0/100.d0
      ae(4,2) = 43.d0/75.d0
      ae(4,3) = 8.d0/75.d0
      ae(5,1) = -6.d0/85.d0
      ae(5,2) = 42.d0/85.d0
      ae(5,3) = 179.d0/1360.d0
      ae(5,4) = -15.d0/272.d0
      ae(6,1) = 0.d0/1.d0
      ae(6,2) = 79.d0/24.d0
      ae(6,3) = -5.d0/8.d0
      ae(6,4) = 25.d0/2.d0
      ae(6,5) = -85.d0/6.d0

       elseif(icase.eq.46) then

c
c ARK4(3)7[2]SA_1 - C2E and C2I
c

      ns=7

      be(1) = 0.d0/1.d0
      be(2) = 0.d0/1.d0
      be(3) = 9164257142617.d0/17756377923965.d0
      be(4) = -10812980402763.d0/74029279521829.d0
      be(5) = 1335994250573.d0/5691609445217.d0
      be(6) = 2273837961795.d0/8368240463276.d0
      be(7) = 247.d0/2000.d0
      !c(1) = 0.d0/1.d0
      !c(2) = 247.d0/1000.d0
      !c(3) = 4276536705230.d0/10142255878289.d0
      !c(4) = 67.d0/200.d0
      !c(5) = 3.d0/40.d0
      !c(6) = 7.d0/10.d0
      !c(7) = 1.d0/1.d0
      beh(1) = 0.d0/1.d0
      beh(2) = 0.d0/1.d0
      beh(3) = 4469248916618.d0/8635866897933.d0
      beh(4) = -621260224600.d0/4094290005349.d0
      beh(5) = 696572312987.d0/2942599194819.d0
      beh(6) = 1532940081127.d0/5565293938103.d0
      beh(7) = 2441.d0/20000.d0
      ai(1,1) = 0.d0/1.d0
      ai(2,1) = 247.d0/2000.d0
      ai(2,2) = 247.d0/2000.d0
      ai(3,1) = 624185399699.d0/4186980696204.d0
      ai(3,2) = 624185399699.d0/4186980696204.d0
      ai(3,3) = 247.d0/2000.d0
      ai(4,1) = 1258591069120.d0/10082082980243.d0
      ai(4,2) = 1258591069120.d0/10082082980243.d0
      ai(4,3) = -322722984531.d0/8455138723562.d0
      ai(4,4) = 247.d0/2000.d0
      ai(5,1) = -436103496990.d0/5971407786587.d0
      ai(5,2) = -436103496990.d0/5971407786587.d0
      ai(5,3) = -2689175662187.d0/11046760208243.d0
      ai(5,4) = 4431412449334.d0/12995360898505.d0
      ai(5,5) = 247.d0/2000.d0
      ai(6,1) = -2207373168298.d0/14430576638973.d0
      ai(6,2) = -2207373168298.d0/14430576638973.d0
      ai(6,3) = 242511121179.d0/3358618340039.d0
      ai(6,4) = 3145666661981.d0/7780404714551.d0
      ai(6,5) = 5882073923981.d0/14490790706663.d0
      ai(6,6) = 247.d0/2000.d0
      ai(7,1) = 0.d0/1.d0
      ai(7,2) = 0.d0/1.d0
      ai(7,3) = 9164257142617.d0/17756377923965.d0
      ai(7,4) = -10812980402763.d0/74029279521829.d0
      ai(7,5) = 1335994250573.d0/5691609445217.d0
      ai(7,6) = 2273837961795.d0/8368240463276.d0
      ai(7,7) = 247.d0/2000.d0
      ae(2,1) = 247.d0/1000.d0
      ae(3,1) = 247.d0/4000.d0
      ae(3,2) = 2694949928731.d0/7487940209513.d0
      ae(4,1) = 464650059369.d0/8764239774964.d0
      ae(4,2) = 878889893998.d0/2444806327765.d0
      ae(4,3) = -952945855348.d0/12294611323341.d0
      ae(5,1) = 476636172619.d0/8159180917465.d0
      ae(5,2) = -1271469283451.d0/7793814740893.d0
      ae(5,3) = -859560642026.d0/4356155882851.d0
      ae(5,4) = 1723805262919.d0/4571918432560.d0
      ae(6,1) = 6338158500785.d0/11769362343261.d0
      ae(6,2) = -4970555480458.d0/10924838743837.d0
      ae(6,3) = 3326578051521.d0/2647936831840.d0
      ae(6,4) = -880713585975.d0/1841400956686.d0
      ae(6,5) = -1428733748635.d0/8843423958496.d0
      ae(7,1) = 760814592956.d0/3276306540349.d0
      ae(7,2) = 760814592956.d0/3276306540349.d0
      ae(7,3) = -47223648122716.d0/6934462133451.d0
      ae(7,4) = 71187472546993.d0/9669769126921.d0
      ae(7,5) = -13330509492149.d0/9695768672337.d0
      ae(7,6) = 11565764226357.d0/8513123442827.d0

       elseif(icase.eq.47) then

c
c ARK5(3)7[2]SA_1
c

      ns=7

      be(1) = -1035874202318.d0/5941463594067.d0
      be(2) = 0.d0/1.d0
      be(3) = 29322740528173.d0/8380657097676.d0
      be(4) = -23625093558447.d0/7453450006061.d0
      be(5) = -17780738667981.d0/9022328460011.d0
      be(6) = 17349883687742.d0/6592098324825.d0
      be(7) = 23.d0/125.d0
      !c(1) = 0.d0/1.d0
      !c(2) = 46.d0/125.d0
      !c(3) = 898984761732.d0/4773113688631.d0
      !c(4) = 2578125912863.d0/11607580104789.d0
      !c(5) = 6329168056175.d0/8751080063074.d0
      !c(6) = 11945809516983.d0/17600328570790.d0
      !c(7) = 1.d0/1.d0
      beh(1) = -4875374073264.d0/32612137232495.d0
      beh(2) = 0.d0/1.d0
      beh(3) = 19795461784359.d0/6606083102863.d0
      beh(4) = -18300079850968.d0/6915024345105.d0
      beh(5) = -4020387078510.d0/2305961315599.d0
      beh(6) = 49330169907229.d0/20895144059807.d0
      beh(7) = 91.d0/500.d0
      ai(1,1) = 0.d0/1.d0
      ai(2,1) = 23.d0/125.d0
      ai(2,2) = 23.d0/125.d0
      ai(3,1) = 837297653213.d0/16640177988437.d0
      ai(3,2) = -450479209463.d0/9798486329994.d0
      ai(3,3) = 23.d0/125.d0
      ai(4,1) = 267269937560.d0/8715092065851.d0
      ai(4,2) = -1092392262039.d0/11148894686126.d0
      ai(4,3) = 1259515085261.d0/11947395713734.d0
      ai(4,4) = 23.d0/125.d0
      ai(5,1) = -2221390254572.d0/8037828474111.d0
      ai(5,2) = -5310851143790.d0/7403894843741.d0
      ai(5,3) = -3749249282765.d0/2436224247178.d0
      ai(5,4) = 40012231621026.d0/13025343919169.d0
      ai(5,5) = 23.d0/125.d0
      ai(6,1) = -3109050051907.d0/13397942393865.d0
      ai(6,2) = -7891242657727.d0/13285080504016.d0
      ai(6,3) = -11186412345545.d0/10551005737059.d0
      ai(6,4) = 29753955343557.d0/12443126504359.d0
      ai(6,5) = -99659507289.d0/9770470807913.d0
      ai(6,6) = 23.d0/125.d0
      ai(7,1) = -1035874202318.d0/5941463594067.d0
      ai(7,2) = 0.d0/1.d0
      ai(7,3) = 29322740528173.d0/8380657097676.d0
      ai(7,4) = -23625093558447.d0/7453450006061.d0
      ai(7,5) = -17780738667981.d0/9022328460011.d0
      ai(7,6) = 17349883687742.d0/6592098324825.d0
      ai(7,7) = 23.d0/125.d0
      ae(1,1) = 0.d0/1.d0
      ae(2,1) = 46.d0/125.d0
      ae(2,2) = 0.d0/1.d0
      ae(3,1) = 401574941973.d0/2865402214768.d0
      ae(3,2) = 433051816043.d0/8984968843751.d0
      ae(3,3) = 0.d0/1.d0
      ae(4,1) = 1952693275352.d0/14775479567705.d0
      ae(4,2) = 250313298103.d0/5821866734852.d0
      ae(4,3) = 322215016351.d0/6862349538376.d0
      ae(4,4) = 0.d0/1.d0
      ae(5,1) = 11751410017763.d0/11112657742514.d0
      ae(5,2) = -548610108202.d0/7240734410115.d0
      ae(5,3) = -108723075337724.d0/10584075024735.d0
      ae(5,4) = 432393447735395.d0/43179505327481.d0
      ae(5,5) = 0.d0/1.d0
      ae(6,1) = 14660883567616.d0/20750823126353.d0
      ae(6,2) = -429304530203.d0/5028728884116.d0
      ae(6,3) = -34039534177347.d0/4727827288663.d0
      ae(6,4) = 35324930814803.d0/4875304186015.d0
      ae(6,5) = 64872495452.d0/5537632998971.d0
      ae(6,6) = 0.d0/1.d0
      ae(7,1) = -1006399435274.d0/8701964592793.d0
      ae(7,2) = 4672747823386.d0/19987543976371.d0
      ae(7,3) = 153616722783444.d0/16686562861567.d0
      ae(7,4) = -37704508198837.d0/3852182854933.d0
      ae(7,5) = -12620119922057.d0/4029688452963.d0
      ae(7,6) = 97078764070659.d0/21124881142075.d0
      ae(7,7) = 0.d0/1.d0

       elseif(icase.eq.48) then

c
c ARK5(4)8[2]SA_1
c
      
      ns=8
 
      be(1) = -872700587467.d0/9133579230613.d0
      be(2) = 0.d0/1.d0
      be(3) = 0.d0/1.d0
      be(4) = 27690470302991.d0/11840148590020.d0
      be(5) = -1143369518992.d0/8141816002931.d0
      be(6) = -33131111716957.d0/16000825074758.d0
      be(7) = 32727382324388.d0/42900044865799.d0
      be(8) = 41.d0/200.d0
      !c(1) = 0.d0/1.d0
      !c(2) = 41.d0/100.d0
      !c(3) = 2702618185169.d0/10397501272910.d0
      !c(4) = 1426016391358.d0/7196633302097.d0
      !c(5) = 23.d0/25.d0
      !c(6) = 6.d0/25.d0
      !c(7) = 3.d0/5.d0
      !c(8) = 1.d0/1.d0
      beh(1) = -975461918565.d0/9796059967033.d0
      beh(2) = 0.d0/1.d0
      beh(3) = 0.d0/1.d0
      beh(4) = 55092529334498.d0/22886913798913.d0
      beh(5) = -548382580838.d0/3424219808633.d0
      beh(6) = -33438840321285.d0/15594753105479.d0
      beh(7) = 3629800801594.d0/4656183773603.d0
      beh(8) = 4035322873751.d0/18575991585200.d0
      ai(1,1) = 0.d0/1.d0
      ai(2,1) = 41.d0/200.d0
      ai(2,2) = 41.d0/200.d0
      ai(3,1) = 41.d0/400.d0
      ai(3,2) = -474862779117.d0/9982313032387.d0
      ai(3,3) = 41.d0/200.d0
      ai(4,1) = 683785636431.d0/9252920307686.d0
      ai(4,2) = 0.d0/1.d0
      ai(4,3) = -110385047103.d0/1367015193373.d0
      ai(4,4) = 41.d0/200.d0
      ai(5,1) = 3016520224154.d0/10081342136671.d0
      ai(5,2) = 0.d0/1.d0
      ai(5,3) = 24622875958349.d0/9993777670996.d0
      ai(5,4) = -22760509404356.d0/11113319521817.d0
      ai(5,5) = 41.d0/200.d0
      ai(6,1) = 218866479029.d0/1489978393911.d0
      ai(6,2) = 0.d0/1.d0
      ai(6,3) = 638256894668.d0/5436446318841.d0
      ai(6,4) = -1179710474555.d0/5321154724896.d0
      ai(6,5) = -60928119172.d0/8023461067671.d0
      ai(6,6) = 41.d0/200.d0
      ai(7,1) = 1020004230633.d0/5715676835656.d0
      ai(7,2) = 0.d0/1.d0
      ai(7,3) = 16164610609885.d0/15851593236906.d0
      ai(7,4) = -2161375909145.d0/9755907335909.d0
      ai(7,5) = -211217309593.d0/5846859502534.d0
      ai(7,6) = -4269925059573.d0/7827059040749.d0
      ai(7,7) = 41.d0/200.d0
      ai(8,1) = -872700587467.d0/9133579230613.d0
      ai(8,2) = 0.d0/1.d0
      ai(8,3) = 0.d0/1.d0
      ai(8,4) = 22348218063261.d0/9555858737531.d0
      ai(8,5) = -1143369518992.d0/8141816002931.d0
      ai(8,6) = -33131111716957.d0/16000825074758.d0
      ai(8,7) = 32727382324388.d0/42900044865799.d0
      ai(8,8) = 41.d0/200.d0
      ae(2,1) = 41.d0/100.d0
      ae(3,1) = 367902744464.d0/2072280473677.d0
      ae(3,2) = 677623207551.d0/8224143866563.d0
      ae(4,1) = 1268023523408.d0/10340822734521.d0
      ae(4,2) = 0.d0/1.d0
      ae(4,3) = 1029933939417.d0/13636558850479.d0
      ae(5,1) = 18545842650705.d0/8097993033337.d0
      ae(5,2) = 0.d0/1.d0
      ae(5,3) = 102662709832204.d0/9129692091915.d0
      ae(5,4) = -99519192130242.d0/7888892295149.d0
      ae(6,1) = 7900869900572.d0/19607835696655.d0
      ae(6,2) = 0.d0/1.d0
      ae(6,3) = 5159784370529.d0/3810736479721.d0
      ae(6,4) = -4299199894784.d0/2893718310421.d0
      ae(6,5) = -281667163811.d0/9011619295870.d0
      ae(7,1) = 24995579532052.d0/17071868886521.d0
      ae(7,2) = 0.d0/1.d0
      ae(7,3) = 77975367602960.d0/10784275688819.d0
      ae(7,4) = -38319376292994.d0/4884805024961.d0
      ae(7,5) = -1.d0/8.d0
      ae(7,6) = -1.d0/8.d0
      ae(8,1) = -11345000159330.d0/6773910875441.d0
      ae(8,2) = 0.d0/1.d0
      ae(8,3) = -121331500060093.d0/18989383385725.d0
      ae(8,4) = 190464150703976.d0/12963623006347.d0
      ae(8,5) = 756940068059.d0/7995882306408.d0
      ae(8,6) = -69563011059811.d0/9646580694205.d0
      ae(8,7) = 7356628210526.d0/4942186776405.d0

       elseif(icase.eq.49) then

c
c ARK5(4)8[2]SA_2
c

      ns=8

      be(1) = 0.d0/1.d0
      be(2) = 0.d0/1.d0
      be(3) = 3517720773327.d0/20256071687669.d0
      be(4) = 4569610470461.d0/17934693873752.d0
      be(5) = 2819471173109.d0/11655438449929.d0
      be(6) = 3296210113763.d0/10722700128969.d0
      be(7) = -1142099968913.d0/5710983926999.d0
      be(8) = 2.d0/9.d0
      !c(1) = 0.d0/1.d0
      !c(2) = 4.d0/9.d0
      !c(3) = 6456083330201.d0/8509243623797.d0
      !c(4) = 1632083962415.d0/14158861528103.d0
      !c(5) = 6365430648612.d0/17842476412687.d0
      !c(6) = 18.d0/25.d0
      !c(7) = 191.d0/200.d0
      !c(8) = 1.d0/1.d0
      beh(1) = 0.d0/1.d0
      beh(2) = 0.d0/1.d0
      beh(3) = 520639020421.d0/8300446712847.d0
      beh(4) = 4550235134915.d0/17827758688493.d0
      beh(5) = 1482366381361.d0/6201654941325.d0
      beh(6) = 5551607622171.d0/13911031047899.d0
      beh(7) = -5266607656330.d0/36788968843917.d0
      beh(8) = 1074053359553.d0/5740751784926.d0
      ai(1,1) = 0.d0/1.d0
      ai(2,1) = 2.d0/9.d0
      ai(2,2) = 2.d0/9.d0
      ai(3,1) = 2366667076620.d0/8822750406821.d0
      ai(3,2) = 2366667076620.d0/8822750406821.d0
      ai(3,3) = 2.d0/9.d0
      ai(4,1) = -257962897183.d0/4451812247028.d0
      ai(4,2) = -257962897183.d0/4451812247028.d0
      ai(4,3) = 128530224461.d0/14379561246022.d0
      ai(4,4) = 2.d0/9.d0
      ai(5,1) = -486229321650.d0/11227943450093.d0
      ai(5,2) = -486229321650.d0/11227943450093.d0
      ai(5,3) = -225633144460.d0/6633558740617.d0
      ai(5,4) = 1741320951451.d0/6824444397158.d0
      ai(5,5) = 2.d0/9.d0
      ai(6,1) = 621307788657.d0/4714163060173.d0
      ai(6,2) = 621307788657.d0/4714163060173.d0
      ai(6,3) = -125196015625.d0/3866852212004.d0
      ai(6,4) = 940440206406.d0/7593089888465.d0
      ai(6,5) = 961109811699.d0/6734810228204.d0
      ai(6,6) = 2.d0/9.d0
      ai(7,1) = 2036305566805.d0/6583108094622.d0
      ai(7,2) = 2036305566805.d0/6583108094622.d0
      ai(7,3) = -3039402635899.d0/4450598839912.d0
      ai(7,4) = -1829510709469.d0/31102090912115.d0
      ai(7,5) = -286320471013.d0/6931253422520.d0
      ai(7,6) = 8651533662697.d0/9642993110008.d0
      ai(7,7) = 2.d0/9.d0
      ai(8,1) = 0.d0/1.d0
      ai(8,2) = 0.d0/1.d0
      ai(8,3) = 3517720773327.d0/20256071687669.d0
      ai(8,4) = 4569610470461.d0/17934693873752.d0
      ai(8,5) = 2819471173109.d0/11655438449929.d0
      ai(8,6) = 3296210113763.d0/10722700128969.d0
      ai(8,7) = -1142099968913.d0/5710983926999.d0
      ai(8,8) = 2.d0/9.d0
      ae(2,1) = 4.d0/9.d0
      ae(3,1) = 1.d0/9.d0
      ae(3,2) = 1183333538310.d0/1827251437969.d0
      ae(4,1) = 895379019517.d0/9750411845327.d0
      ae(4,2) = 477606656805.d0/13473228687314.d0
      ae(4,3) = -112564739183.d0/9373365219272.d0
      ae(5,1) = -4458043123994.d0/13015289567637.d0
      ae(5,2) = -2500665203865.d0/9342069639922.d0
      ae(5,3) = 983347055801.d0/8893519644487.d0
      ae(5,4) = 2185051477207.d0/2551468980502.d0
      ae(6,1) = -167316361917.d0/17121522574472.d0
      ae(6,2) = 1605541814917.d0/7619724128744.d0
      ae(6,3) = 991021770328.d0/13052792161721.d0
      ae(6,4) = 2342280609577.d0/11279663441611.d0
      ae(6,5) = 3012424348531.d0/12792462456678.d0
      ae(7,1) = 6680998715867.d0/14310383562358.d0
      ae(7,2) = 5029118570809.d0/3897454228471.d0
      ae(7,3) = 2415062538259.d0/6382199904604.d0
      ae(7,4) = -3924368632305.d0/6964820224454.d0
      ae(7,5) = -4331110370267.d0/15021686902756.d0
      ae(7,6) = -3944303808049.d0/11994238218192.d0
      ae(8,1) = 2193717860234.d0/3570523412979.d0
      ae(8,2) = 2193717860234.d0/3570523412979.d0
      ae(8,3) = 5952760925747.d0/18750164281544.d0
      ae(8,4) = -4412967128996.d0/6196664114337.d0
      ae(8,5) = 4151782504231.d0/36106512998704.d0
      ae(8,6) = 572599549169.d0/6265429158920.d0
      ae(8,7) = -457874356192.d0/11306498036315.d0


      endif                                                  !  end icase loop

      if(icase.ge.38.or.icase.le.49) then
        do i=1,ns
         bi(i)  = be(i)
         bih(i) = beh(i)
        enddo
      endif

c  
      do i = 1,ns
        do j = 1,ns
          cE(i) = cE(i) + aE(i,j)
          cI(i) = cI(i) + aI(i,j)
        enddo
      enddo

      eps = 1.0e-7
      if(beh(1).lt.eps.and.bih(1).lt.eps)then
        do i = 1,ns
          beh(i) = 1./ns
          bih(i) = 1./ns
        enddo
      endif

      return
      end

c      Given a set of data points x(1: ndata),y(1: ndata) 
c      with individual standard deviations
c      sig(1: ndata), fit them to a straight line y = a + bx 
c      by minimizing x2. 
c      Returned are a, b and their respective probable uncertainties siga and sigb, 
c      the chi-square chi2, and or the goodness-of-fit probability q 
c      (that the fit would have x2 this large or larger). If mwt=0
c      on input, then the standard deviations are assumed to be unavailable: q 
c      is returned as 1. and the normalization of chi2 is to unit standard deviation 
c      on all points.

      SUBROUTINE fit(x,y,ndata,sig,mwt,a,b,siga,sigb,chi2,q)
      INTEGER mwt ,ndata
      REAL a,b,chi2,q,siga,sigb,sig(ndata),x(ndata),y(ndata)
      INTEGER i
      REAL sigdat,ss,st2,sx,sxoss,sy,t,wt,gammq
      sx=0.
      sy=0.
      st2=0. 
      b=0.
      if(mwt.ne.0) then 
        ss=0.
        do i=1,ndata
          wt=1./(sig(i)**2)
          ss=ss+wt
          sx=sx+x(i)*wt
          sy=sy+y(i)*wt
        enddo
      else
        do i=1,ndata
          sx=sx+x(i)
          sy=sy+y(i)
        enddo 
        ss=float(ndata)
      endif
      sxoss=sx/ss
      if(mwt.ne.0) then
        do i=1,ndata
          t=(x(i)-sxoss)/sig(i)
          st2=st2+t*t
          b=b+t*y(i)/sig(i)
        enddo
      else
        do i=1,ndata
          t=x(i)-sxoss
          st2=st2+t*t
          b=b+t*y(i)
        enddo 
      endif
      b=b/st2
      a=(sy-sx*b)/ss
      siga=sqrt((1.+sx*sx/(ss*st2))/ss)
      sigb=sqrt(1./st2)
      chi2=0.
      if(mwt.eq.0) then
        do i=1,ndata
          chi2=chi2+(y(i)-a-b*x(i))**2
        enddo 
        q=1.
        sigdat=sqrt(chi2/(ndata-2) )
        siga=siga*sigdat
        sigb=sigb*sigdat
      else
        do  i=1,ndata
          chi2=chi2+((y(i)-a-b*x(i))/sig(i))**2
        enddo 
        q=gammq(0.5*(ndata-2),0.5*chi2)
      endif
      return
      end

      SUBROUTINE gser(gamser,a,x,gln)
      INTEGER itkax
      REAL a,gamser,gln,x,eps
      PARAMETER (itkax=100,eps=3.e-7)
c     USES gammln
c     Returns the incomplete gamma function P(a, x) evaluated by its series 
c     representation as gamser. Also returns In r( a) as gln.
      INTEGER n
      REAL ap,del,sum,gammln
      gln=gammln (A)
      if(x.le.0.)then
      if(x.lt.0.)pause 'x < 0 in gser'
      gamser=0.
      return
      endif
      ap=a
      sum=1./a
      del=sum
      do n=1,itkax
      ap=ap+1.
      del=del*x/ap
      sum=sum+del
      if(abs(del).lt.abs(sum)*eps)goto 1
      enddo 
      pause 'a too large, itkax too small in gser'
    1 gamser=sum*exp(-x+a*log(x)-gln)
      return
      end

      SUBROUTINE gcf(gammcf,a,x,gln)
      INTEGER itkax
      REAL a,gammcf,gln,x,eps,FPMIN
      PARAMETER (itkax=100,eps=3.e-7,FPMIN=1.e-30)
c     USES gammln
      INTEGER i
      REAL an,b,c,d,del,h,gammln
      gln=gammln(a)
      b=x+1. -a 
      c=1. /FPMIN 
      d=1./b
      h=d
      do i=1, itkax 
      an=-i*(i-a)
      b=b+2.
      d=an*d+b
      if(abs(d).lt.FPMIN)d=FPMIN
      c=b+an/c
      if(abs(c).lt.FPMIN)c=FPMIN
      d=1./d
      del=d*c
      h=h*del
      if(abs(del-1.).lt.EPS)goto 1
      enddo
      pause 'a too large, ITMAX too small in gcf'
    1 gammcf=exp(-x+a*log(x)-gln)*h
      return
      end

      FUNCTION gammq(a,x)
      REAL a,gammq,x
c     USES gcf,gser
c     Returns the incomplete gamma function Q(a, x) = 1 -P(a, x).
      REAL gammcf ,gamser ,gln
      if(x.lt.0. .or.a.le.0.)pause 'bad arguments in gammq'
      if (x .lt .a+1. ) then 
      call gser(gamser,a,x,gln)
      gammq=1. -gamser 
      call gcf(gammcf,a,x,gln)
      endif
      return
      end

      FUNCTION gammln(xx)
      REAL gammln,xx
      INTEGER j
      DOUBLE PRECISION ser,stp,tmp,x,y,cof(6)
      SAVE cof,stp
      DATA cof,stp/76.18009172947146d0,-86.50532032941677d0,
     &24.01409824083091d0,-1.231739572450155d0,.1208650973866179d-2,
     &-.5395239384953d-5,2.5066282746310005d0/
      x=xx
      y=x
      tmp=x+5.5d0
      tmp=(x+0.5d0)*log(tmp)-tmp
      ser=1.000000000190015d0
      do j=1,6
      y=y+1.d0
      ser=ser+cof(j)/y
      enddo 
      gammln=tmp+log(stp*ser/x)
      return
      end
